name: API tests
on:
  push:
    paths-ignore:
      - 'client/**'
      - 'doc/**'
      - 'lib/galaxy_test/selenium/**'
  pull_request:
    paths-ignore:
      - 'client/**'
      - 'doc/**'
      - 'lib/galaxy_test/selenium/**'
  schedule:
    # Run at midnight UTC every Tuesday
    - cron: '0 0 * * 2'
env:
  GALAXY_DEPENDENCIES_INSTALL_WEASYPRINT: '1'
  GALAXY_TEST_DBURI: 'postgresql://postgres:postgres@localhost:5432/galaxy?client_encoding=utf8'
  GALAXY_TEST_RAISE_EXCEPTION_ON_HISTORYLESS_HDA: '1'
  GALAXY_CONFIG_SQLALCHEMY_WARN_20: '1'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8']
        chunk: [0, 1]
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - if: github.event_name == 'schedule'
        run: |
          echo "GALAXY_CONFIG_OVERRIDE_METADATA_STRATEGY=extended" >> $GITHUB_ENV
          echo "GALAXY_CONFIG_OVERRIDE_OUTPUTS_TO_WORKING_DIRECTORY=true" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          path: 'galaxy root'
      - uses: actions/setup-node@v4
        with:
          node-version: '18.12.1'
          cache: 'yarn'
          cache-dependency-path: 'galaxy root/client/yarn.lock'
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo "version=$(python -c 'import sys; print("-".join(str(v) for v in sys.version_info))')" >> $GITHUB_OUTPUT
      - name: Cache pip dir
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ matrix.python-version }}-${{ hashFiles('galaxy root/requirements.txt') }}
      - name: Cache galaxy venv
        uses: actions/cache@v4
        with:
          path: 'galaxy root/.venv'
          key: gxy-venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('galaxy root/requirements.txt') }}-api
      - name: Run tests
        run: ./run_tests.sh --coverage --skip_flakey_fails -api lib/galaxy_test/api -- --num-shards=2 --shard-id=${{ matrix.chunk }}
        working-directory: 'galaxy root'
      - uses: codecov/codecov-action@v3
        with:
          flags: api
          working-directory: 'galaxy root'
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: API test results (${{ matrix.python-version }}, ${{ matrix.chunk }})
          path: 'galaxy root/run_api_tests.html'
