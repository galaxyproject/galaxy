name: Test Galaxy package integration with TPV
on:
  push:
    paths-ignore:
      - 'client/**'
      - 'doc/**'
  pull_request:
    paths-ignore:
      - 'client/**'
      - 'doc/**'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
    steps:
      - name: Checkout galaxy code
        uses: actions/checkout@v3
      - name: Checkout tpv code
        uses: actions/checkout@v3
        with:
          repository: galaxyproject/total-perspective-vortex
          path: 'tpv'
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo "version=$(python -c 'import sys; print("-".join(str(v) for v in sys.version_info))')" >> $GITHUB_OUTPUT
      - name: Cache pip dir
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
      - name: Cache galaxy venv
        uses: actions/cache@v3
        with:
          path: '.venv'
          key: gxy-venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('requirements.txt') }}-integration
      - name: replace tpv galaxy dependencies with package paths from local galaxy build
        run: |
          GALAXY_SKIP_NODE=1 GALAXY_SKIP_CLIENT_BUILD=1 make setup-venv
          # create local release
          echo "c" | ./scripts/release.sh -l
          # make requirements point to local wheels
          while read -r line; do
            package_path=`echo $line | sed -e '/^galaxy-/ s/-/_/g' -e 's|^galaxy_\(.*\)$|../packages/\1|'`            
            if [ -d $package_path ]; then
              # This is a local package. Replace it with the path to the local wheel
              row=`find $package_path/dist -type d -exec find {} -depth -maxdepth 1 -type f -name '*.whl' -print -quit \;`
            else
              # pass original requirement line unchanged
              row=$line
            fi
            echo $row >> tpv/requirements_local.txt
          done < "$file"
          cat tpv/requirements_local.txt
          mv tpv/requirements_local.txt tpv/requirements_test.txt
      - name: Install required packages
        run: pip install tox
      - name: Run tox
        run: tox -e py${{ matrix.python-version }}
        env:
          PYTHONUNBUFFERED: "True"
        working-directory: 'tpv'
