<tool id="discover_sort_by" name="discover_sort_by" version="0.1.0" profile="20.09">
    <command><![CDATA[
for i in \$(seq 1 10);
do
    echo "\$i" > \$i.txt;
done
## create a directory that matches the discovery pattern
## but must not be discovered because it's a directory which
## leads to an error https://github.com/galaxyproject/galaxy/pull/11307
## && mkdir blah.txt
]]></command>
  <inputs/>
  <outputs>
    <collection name="collection_numeric_name" type="list" label="num">
      <discover_datasets pattern="__name_and_ext__" sort_by="numeric_name"/>
    </collection>
    <collection name="collection_rev_numeric_name" type="list" label="num rev">
      <discover_datasets pattern="__name_and_ext__" sort_by="reverse_numeric_name"/>
    </collection>
    <collection name="collection_lexical_name" type="list" label="num">
      <discover_datasets pattern="__name_and_ext__" sort_by="lexical_name" />
    </collection>
    <data name="data_reverse_lexical_name">
      <discover_datasets pattern="__name_and_ext__" format="txt" assign_primary_output="true" sort_by="reverse_lexical_name" visible="true"/>
    </data>
  </outputs>
  <tests>
    <test expect_num_outputs="4">
      <output_collection name="collection_numeric_name" type="list" count="10">
        <element name="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="2">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
      </output_collection>
      <output_collection name="collection_rev_numeric_name" type="list" count="10">
        <element name="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="2">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
      </output_collection>
      <output_collection name="collection_lexical_name" type="list" count="10">
        <element name="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="2">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
      </output_collection>
      <output name="data_reverse_lexical_name">
        <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        <discovered_dataset designation="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </discovered_dataset>
        <discovered_dataset designation="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </discovered_dataset>
      </output>
    </test>
    <!-- same test with wrong order should fail  -->
    <test expect_num_outputs="4" expect_test_failure="true">
      <output_collection name="collection_numeric_name" type="list" count="10">
        <element name="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="2">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
      </output_collection>
      <output_collection name="collection_rev_numeric_name" type="list" count="10">
        <element name="2">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
      </output_collection>
      <output_collection name="collection_lexical_name" type="list" count="10">
        <element name="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="2">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
      </output_collection>
      <output name="data_reverse_lexical_name">
        <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        <discovered_dataset designation="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </discovered_dataset>
        <discovered_dataset designation="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </discovered_dataset>
      </output>
    </test>
  </tests>
</tool>
