<tool id="gx_conditional_boolean_discriminate_on_string_value" name="gx_conditional_boolean_discriminate_on_string_value" version="1.0.0">
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="common_conditional_tags" />    
    <inputs>
        <conditional name="conditional_parameter">
            <!-- boolean parameters as the test parameter are discouraged, respect linting and don't do this -->
            <param name="test_parameter" type="boolean" truevalue="a_value_that_is_t" falsevalue="a_value_that_is_f"  />
            <when value="a_value_that_is_t">
                <param name="integer_parameter" type="integer" value="1" />
            </when>
            <when value="a_value_that_is_f">
                <param name="boolean_parameter" type="boolean" />
            </when>
        </conditional>
    </inputs>
    <tests>
        <test>
            <expand macro="assert_output">
                <has_line line="test: a_value_that_is_f" />
            </expand>
            <expand macro="assert_inputs_json">
                <has_json_property_with_value property="test_parameter" value="false" />
                <has_json_property_with_value property="boolean_parameter" value="false" />
            </expand>
        </test>
        <test>
            <conditional name="conditional_parameter">
                <param name="test_parameter" value="true" />
            </conditional>
            <expand macro="assert_output">
                <has_line line="test: a_value_that_is_t" />
            </expand>
            <expand macro="assert_inputs_json">
                <has_json_property_with_value property="test_parameter" value="true" />
                <has_json_property_with_value property="integer_parameter" value="1" />
            </expand>
        </test>
        <test>
            <conditional name="conditional_parameter">
                <param name="test_parameter" value_json="false" />
            </conditional>
            <expand macro="assert_output">
                <has_line line="test: a_value_that_is_f" />
            </expand>
            <expand macro="assert_inputs_json">
                <has_json_property_with_value property="test_parameter" value="false" />
                <has_json_property_with_value property="boolean_parameter" value="false" />
            </expand>
        </test>
        <test>
            <conditional name="conditional_parameter">
                <param name="test_parameter" value_json="true" />
            </conditional>
            <expand macro="assert_output">
                <has_line line="test: a_value_that_is_t" />
            </expand>
            <expand macro="assert_inputs_json">
                <has_json_property_with_value property="test_parameter" value="true" />
                <has_json_property_with_value property="integer_parameter" value="1" />
            </expand>
        </test>
        <test>
            <conditional name="conditional_parameter">
                <param name="test_parameter" value="a_value_that_is_t" />
            </conditional>
            <expand macro="assert_output">
                <has_line line="test: a_value_that_is_t" />
            </expand>
            <expand macro="assert_inputs_json">
                <has_json_property_with_value property="test_parameter" value="true" />
                <has_json_property_with_value property="integer_parameter" value="1" />
            </expand>
        </test>
        <test>
            <conditional name="conditional_parameter">
                <param name="test_parameter" value="a_value_that_is_f" />
            </conditional>
            <expand macro="assert_output">
                <has_line line="test: a_value_that_is_f" />
            </expand>
            <expand macro="assert_inputs_json">
                <has_json_property_with_value property="test_parameter" value="false" />
                <has_json_property_with_value property="boolean_parameter" value="false" />
            </expand>
        </test>
        <test>
            <conditional name="conditional_parameter">
                <param name="test_parameter" value="True" />
            </conditional>
            <expand macro="assert_output">
                <has_line line="test: a_value_that_is_t" />
            </expand>
            <expand macro="assert_inputs_json">
                <has_json_property_with_value property="test_parameter" value="true" />
                <has_json_property_with_value property="integer_parameter" value="1" />
            </expand>
        </test>
        <test>
            <conditional name="conditional_parameter">
                <param name="test_parameter" value="False" />
            </conditional>
            <expand macro="assert_output">
                <has_line line="test: a_value_that_is_f" />
            </expand>
            <expand macro="assert_inputs_json">
                <has_json_property_with_value property="test_parameter" value="false" />
                <has_json_property_with_value property="boolean_parameter" value="false" />
            </expand>
        </test>
    </tests>
</tool>
