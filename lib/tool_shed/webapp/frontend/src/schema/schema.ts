/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/authenticate/baseauth": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Returns returns an API key for authenticated user based on BaseAuth headers. */
        get: operations["authenticate__baseauth"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/categories": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Index
         * @description index category
         */
        get: operations["categories__index"]
        put?: never
        /**
         * Create
         * @description create a category
         */
        post: operations["categories__create"]
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/categories/{encoded_category_id}": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Show
         * @description show category
         */
        get: operations["categories__show"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/categories/{encoded_category_id}/repositories": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Repositories
         * @description display repositories by category
         */
        get: operations["categories__repositories"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/ga4gh/trs/v2/service-info": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Service Info */
        get: operations["tools_trs_service_info"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/ga4gh/trs/v2/toolClasses": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Tool Classes */
        get: operations["tools__trs_tool_classes"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/ga4gh/trs/v2/tools": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Trs Index */
        get: operations["tools__trs_index"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/ga4gh/trs/v2/tools/{tool_id}": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Trs Get */
        get: operations["tools__trs_get"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/ga4gh/trs/v2/tools/{tool_id}/versions": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Trs Get Versions */
        get: operations["tools__trs_get_versions"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Index
         * @description Get a list of repositories or perform a search.
         */
        get: operations["repositories__index"]
        put?: never
        /**
         * Create
         * @description create a new repository
         */
        post: operations["repositories__create"]
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/get_ordered_installable_revisions": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Get Ordered Installable Revisions
         * @description Get an ordered list of the repository changeset revisions that are installable
         */
        get: operations["repositories__get_ordered_installable_revisions"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/get_repository_revision_install_info": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Legacy Install Info
         * @description Get information used by the install client to install this repository.
         */
        get: operations["repositories__legacy_install_info"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/install_info": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Install Info
         * @description Get information used by the install client to install this repository.
         */
        get: operations["repositories__install_info"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/reset_metadata_on_repository": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        /**
         * Reset Metadata On Repository Legacy
         * @description reset metadata on a repository
         */
        post: operations["repositories__reset_legacy"]
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/updates": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Updates */
        get: operations["repositories__update"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/{encoded_repository_id}": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Show */
        get: operations["repositories__show"]
        /** Update Repository */
        put: operations["repositories__update_repository"]
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/{encoded_repository_id}/allow_push": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Show Allow Push */
        get: operations["repositories__show_allow_push"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/{encoded_repository_id}/allow_push/{username}": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        /** Add Allow Push */
        post: operations["repositories__add_allow_push"]
        /** Remove Allow Push */
        delete: operations["repositories__remove_allow_push"]
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/{encoded_repository_id}/changeset_revision": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        /**
         * Create Changeset Revision
         * @description upload new revision to the repository
         */
        post: operations["repositories__create_revision"]
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/{encoded_repository_id}/deprecated": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        /** Set Deprecated */
        put: operations["repositories__set_deprecated"]
        post?: never
        /** Unset Deprecated */
        delete: operations["repositories__unset_deprecated"]
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/{encoded_repository_id}/metadata": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Metadata
         * @description Get information about repository metadata
         */
        get: operations["repositories__metadata"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/{encoded_repository_id}/permissions": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Permissions */
        get: operations["repositories__permissions"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/{encoded_repository_id}/reset_metadata": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        /**
         * Reset Metadata On Repository
         * @description reset metadata on a repository
         */
        post: operations["repositories__reset"]
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/{encoded_repository_id}/revisions/{changeset_revision}/malicious": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        /** Set Malicious */
        put: operations["repositories__set_malicious"]
        post?: never
        /** Unset Malicious */
        delete: operations["repositories__unset_malicious"]
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/repositories/{encoded_repository_id}/revisions/{changeset_revision}/readmes": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Get Readmes
         * @description fetch readmes for repository revision
         */
        get: operations["repositories__readmes"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/tools": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Index */
        get: operations["tools__index"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/tools/build_search_index": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        /**
         * Build Search Index
         * @description Not part of the stable API, just something to simplify
         *     bootstrapping tool sheds, scripting, testing, etc...
         */
        put: operations["tools__build_search_index"]
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/tools/{tool_id}/versions/{tool_version}": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Return Galaxy's meta model description of the tool's inputs */
        get: operations["tools__parameter_model"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/tools/{tool_id}/versions/{tool_version}/parameter_request_schema": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Return a JSON schema description of the tool's inputs for the tool request API that will be added to Galaxy at some point
         * @description The tool request schema includes validation of map/reduce concepts that can be consumed by the tool execution API and not just the request for a single execution.
         */
        get: operations["tools__parameter_request_model"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/users": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Index
         * @description index users
         */
        get: operations["users__index"]
        put?: never
        /**
         * Create
         * @description create a user
         */
        post: operations["users__create"]
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/users/current": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Current
         * @description show current user
         */
        get: operations["users__current"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/users/{encoded_user_id}": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Show
         * @description show a user
         */
        get: operations["users__show"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/users/{encoded_user_id}/api_key": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Return the user's API key */
        get: operations["users__get_or_create_api_key"]
        put?: never
        /** Creates a new API key for the user */
        post: operations["users__create_api_key"]
        /** Delete the current API key of the user */
        delete: operations["users__delete_api_key"]
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api/version": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /** Version */
        get: operations["configuration__version"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api_internal/change_password": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        /**
         * Change Password
         * @description reset a user
         */
        put: operations["users__internal_change_password"]
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api_internal/login": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        /**
         * Internal Login
         * @description login to web UI
         */
        put: operations["users__internal_login"]
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api_internal/logout": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        /**
         * Internal Logout
         * @description logout of web UI
         */
        put: operations["users__internal_logout"]
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api_internal/register": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        /**
         * Register
         * @description register a user
         */
        post: operations["users__internal_register"]
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    "/api_internal/repositories/{encoded_repository_id}/metadata": {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        /**
         * Metadata Internal
         * @description Get information about repository metadata
         */
        get: operations["repositories__internal_metadata"]
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
}
export type webhooks = Record<string, never>
export interface components {
    schemas: {
        /** APIKeyResponse */
        APIKeyResponse: {
            /** Api Key */
            api_key: string
        }
        /** BaseUrlParameterModel */
        BaseUrlParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_baseurl
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_baseurl"
        }
        /** Body_repositories__create_revision */
        Body_repositories__create_revision: {
            /** Commit Message */
            commit_message?: unknown
            /** Files */
            files?: string[] | null
        }
        /** BooleanParameterModel */
        BooleanParameterModel: {
            /** Argument */
            argument?: string | null
            /** Falsevalue */
            falsevalue?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_boolean
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_boolean"
            /** Truevalue */
            truevalue?: string | null
            /**
             * Value
             * @default false
             */
            value: boolean | null
        }
        /** BuildSearchIndexResponse */
        BuildSearchIndexResponse: {
            /** Repositories Indexed */
            repositories_indexed: number
            /** Tools Indexed */
            tools_indexed: number
        }
        /** Category */
        Category: {
            /** Deleted */
            deleted: boolean
            /** Description */
            description: string
            /** Id */
            id: string
            /** Name */
            name: string
            /** Repositories */
            repositories: number
        }
        /** Checksum */
        Checksum: {
            /**
             * Checksum
             * @description The hex-string encoded checksum for the data.
             */
            checksum: string
            /**
             * Type
             * @description The digest method used to create the checksum.
             *     The value (e.g. `sha-256`) SHOULD be listed as `Hash Name String` in the https://github.com/ga4gh-discovery/ga4gh-checksum/blob/master/hash-alg.csv[GA4GH Checksum Hash Algorithm Registry].
             *     Other values MAY be used, as long as implementers are aware of the issues discussed in https://tools.ietf.org/html/rfc6920#section-9.4[RFC6920].
             *     GA4GH may provide more explicit guidance for use of non-IANA-registered algorithms in the future.
             */
            type: string
        }
        /** Citation */
        Citation: {
            /** Content */
            content: string
            /** Type */
            type: string
        }
        /** ColorParameterModel */
        ColorParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_color
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_color"
            /** Value */
            value?: string | null
        }
        /** ConditionalParameterModel */
        ConditionalParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_conditional
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_conditional"
            /** Test Parameter */
            test_parameter:
                | components["schemas"]["BooleanParameterModel"]
                | components["schemas"]["SelectParameterModel"]
            /** Whens */
            whens: components["schemas"]["ConditionalWhen"][]
        }
        /** ConditionalWhen */
        ConditionalWhen: {
            /** Discriminator */
            discriminator: boolean | string
            /** Is Default When */
            is_default_when: boolean
            /** Parameters */
            parameters: (
                | components["schemas"]["CwlIntegerParameterModel"]
                | components["schemas"]["CwlFloatParameterModel"]
                | components["schemas"]["CwlStringParameterModel"]
                | components["schemas"]["CwlBooleanParameterModel"]
                | components["schemas"]["CwlNullParameterModel"]
                | components["schemas"]["CwlFileParameterModel"]
                | components["schemas"]["CwlDirectoryParameterModel"]
                | components["schemas"]["CwlUnionParameterModel"]
                | components["schemas"]["TextParameterModel"]
                | components["schemas"]["IntegerParameterModel"]
                | components["schemas"]["FloatParameterModel"]
                | components["schemas"]["BooleanParameterModel"]
                | components["schemas"]["HiddenParameterModel"]
                | components["schemas"]["SelectParameterModel"]
                | components["schemas"]["DataParameterModel"]
                | components["schemas"]["DataCollectionParameterModel"]
                | components["schemas"]["DataColumnParameterModel"]
                | components["schemas"]["DirectoryUriParameterModel"]
                | components["schemas"]["RulesParameterModel"]
                | components["schemas"]["DrillDownParameterModel"]
                | components["schemas"]["GroupTagParameterModel"]
                | components["schemas"]["BaseUrlParameterModel"]
                | components["schemas"]["GenomeBuildParameterModel"]
                | components["schemas"]["ColorParameterModel"]
                | components["schemas"]["ConditionalParameterModel"]
                | components["schemas"]["RepeatParameterModel"]
                | components["schemas"]["SectionParameterModel"]
            )[]
        }
        /** CreateCategoryRequest */
        CreateCategoryRequest: {
            /** Description */
            description?: string | null
            /** Name */
            name: string
        }
        /** CreateRepositoryRequest */
        CreateRepositoryRequest: {
            /** Category IDs */
            "category_ids[]": string[] | string | null
            /** Description */
            description?: string | null
            /** Homepage Url */
            homepage_url?: string | null
            /** Name */
            name: string
            /** Remote Repository Url */
            remote_repository_url?: string | null
            /** Synopsis */
            synopsis: string
            /**
             * Type
             * @default unrestricted
             * @enum {string}
             */
            type: "repository_suite_definition" | "tool_dependency_definition" | "unrestricted"
        }
        /** CreateUserRequest */
        CreateUserRequest: {
            /** Email */
            email: string
            /** Password */
            password: string
            /** Username */
            username: string
        }
        /** CwlBooleanParameterModel */
        CwlBooleanParameterModel: {
            /** Name */
            name: string
            /**
             * Parameter Type
             * @default cwl_boolean
             * @constant
             * @enum {string}
             */
            parameter_type: "cwl_boolean"
        }
        /** CwlDirectoryParameterModel */
        CwlDirectoryParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default cwl_directory
             * @constant
             * @enum {string}
             */
            parameter_type: "cwl_directory"
        }
        /** CwlFileParameterModel */
        CwlFileParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default cwl_file
             * @constant
             * @enum {string}
             */
            parameter_type: "cwl_file"
        }
        /** CwlFloatParameterModel */
        CwlFloatParameterModel: {
            /** Name */
            name: string
            /**
             * Parameter Type
             * @default cwl_float
             * @constant
             * @enum {string}
             */
            parameter_type: "cwl_float"
        }
        /** CwlIntegerParameterModel */
        CwlIntegerParameterModel: {
            /** Name */
            name: string
            /**
             * Parameter Type
             * @default cwl_integer
             * @constant
             * @enum {string}
             */
            parameter_type: "cwl_integer"
        }
        /** CwlNullParameterModel */
        CwlNullParameterModel: {
            /** Name */
            name: string
            /**
             * Parameter Type
             * @default cwl_null
             * @constant
             * @enum {string}
             */
            parameter_type: "cwl_null"
        }
        /** CwlStringParameterModel */
        CwlStringParameterModel: {
            /** Name */
            name: string
            /**
             * Parameter Type
             * @default cwl_string
             * @constant
             * @enum {string}
             */
            parameter_type: "cwl_string"
        }
        /** CwlUnionParameterModel */
        CwlUnionParameterModel: {
            /** Name */
            name: string
            /**
             * Parameter Type
             * @default cwl_union
             * @constant
             * @enum {string}
             */
            parameter_type: "cwl_union"
            /** Parameters */
            parameters: (
                | components["schemas"]["CwlIntegerParameterModel"]
                | components["schemas"]["CwlFloatParameterModel"]
                | components["schemas"]["CwlStringParameterModel"]
                | components["schemas"]["CwlBooleanParameterModel"]
                | components["schemas"]["CwlNullParameterModel"]
                | components["schemas"]["CwlFileParameterModel"]
                | components["schemas"]["CwlDirectoryParameterModel"]
                | components["schemas"]["CwlUnionParameterModel"]
            )[]
        }
        /** DataCollectionParameterModel */
        DataCollectionParameterModel: {
            /** Argument */
            argument?: string | null
            /** Collection Type */
            collection_type?: string | null
            /**
             * Extensions
             * @default [
             *       "data"
             *     ]
             */
            extensions: string[]
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_data_collection
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_data_collection"
            /** Value */
            value: Record<string, never> | null
        }
        /** DataColumnParameterModel */
        DataColumnParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Multiple */
            multiple: boolean
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_data_column
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_data_column"
        }
        /** DataParameterModel */
        DataParameterModel: {
            /** Argument */
            argument?: string | null
            /**
             * Extensions
             * @default [
             *       "data"
             *     ]
             */
            extensions: string[]
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Max */
            max?: number | null
            /** Min */
            min?: number | null
            /**
             * Multiple
             * @default false
             */
            multiple: boolean
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_data
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_data"
        }
        /**
         * DescriptorType
         * @enum {string}
         */
        DescriptorType: "CWL" | "WDL" | "NFL" | "GALAXY" | "SMK"
        /**
         * DescriptorTypeVersion
         * @description The language version for a given descriptor type. The version should correspond to the actual declared version of the descriptor. For example, tools defined in CWL could have a version of `v1.0.2` whereas WDL tools may have a version of `1.0` or `draft-2`
         */
        DescriptorTypeVersion: string
        /** DetailedRepository */
        DetailedRepository: {
            /** Create Time */
            create_time: string
            /** Deleted */
            deleted: boolean
            /** Deprecated */
            deprecated: boolean
            /** Description */
            description: string
            /** Homepage Url */
            homepage_url?: string | null
            /** Id */
            id: string
            /** Long Description */
            long_description: string | null
            /** Name */
            name: string
            /** Owner */
            owner: string
            /** Private */
            private: boolean
            /** Remote Repository Url */
            remote_repository_url?: string | null
            /** Times Downloaded */
            times_downloaded: number
            /** Type */
            type: string
            /** Update Time */
            update_time: string
            /** User Id */
            user_id: string
        }
        /** DirectoryUriParameterModel */
        DirectoryUriParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_directory_uri
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_directory_uri"
        }
        /** DrillDownOptionsDict */
        DrillDownOptionsDict: {
            /** Name */
            name: string | null
            /** Options */
            options: components["schemas"]["DrillDownOptionsDict"][]
            /** Selected */
            selected: boolean
            /** Value */
            value: string
        }
        /** DrillDownParameterModel */
        DrillDownParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Hierarchy
             * @enum {string}
             */
            hierarchy: "recurse" | "exact"
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Multiple */
            multiple: boolean
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /** Options */
            options?: components["schemas"]["DrillDownOptionsDict"][] | null
            /**
             * Parameter Type
             * @default gx_drill_down
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_drill_down"
        }
        /** FailedRepositoryUpdateMessage */
        FailedRepositoryUpdateMessage: {
            /** Err Msg */
            err_msg: string
        }
        /** FilePatternDatasetCollectionDescription */
        FilePatternDatasetCollectionDescription: {
            /** Assign Primary Output */
            assign_primary_output: boolean
            /** Directory */
            directory: string | null
            /**
             * Discover Via
             * @constant
             * @enum {string}
             */
            discover_via: "pattern"
            /** Format */
            format: string | null
            /** Match Relative Path */
            match_relative_path: boolean
            /** Pattern */
            pattern: string
            /** Recurse */
            recurse: boolean
            /**
             * Sort Comp
             * @enum {string}
             */
            sort_comp: "lexical" | "numeric"
            /**
             * Sort Key
             * @enum {string}
             */
            sort_key: "filename" | "name" | "designation" | "dbkey"
            /** Visible */
            visible: boolean
        }
        /** FloatParameterModel */
        FloatParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Max */
            max?: number | null
            /** Min */
            min?: number | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_float
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_float"
            /** Value */
            value?: number | null
        }
        /** GenomeBuildParameterModel */
        GenomeBuildParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Multiple */
            multiple: boolean
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_genomebuild
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_genomebuild"
        }
        /** GroupTagParameterModel */
        GroupTagParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Multiple */
            multiple: boolean
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_group_tag
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_group_tag"
        }
        /** HiddenParameterModel */
        HiddenParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_hidden
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_hidden"
            /** Value */
            value: string | null
        }
        /** ImageData */
        ImageData: {
            /**
             * Checksum
             * @description A production (immutable) tool version is required to have a hashcode. Not required otherwise, but might be useful to detect changes.  This exposes the hashcode for specific image versions to verify that the container version pulled is actually the version that was indexed by the registry.
             */
            checksum?: components["schemas"]["Checksum"][] | null
            /**
             * Image Name
             * @description Used in conjunction with a registry_url if provided to locate images.
             */
            image_name?: string | null
            image_type?: components["schemas"]["ImageType"] | null
            /**
             * Registry Host
             * @description A docker registry or a URL to a Singularity registry. Used along with image_name to locate a specific image.
             */
            registry_host?: string | null
            /**
             * Size
             * @description Size of the container in bytes.
             */
            size?: number | null
            /**
             * Updated
             * @description Last time the container was updated.
             */
            updated?: string | null
        }
        /**
         * ImageType
         * @enum {string}
         */
        ImageType: "Docker" | "Singularity" | "Conda"
        /** InstallInfo */
        InstallInfo: {
            metadata_info?: components["schemas"]["RepositoryMetadataInstallInfo"] | null
            repo_info?: components["schemas"]["RepositoryExtraInstallInfo"] | null
        }
        /** IntegerParameterModel */
        IntegerParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Max */
            max?: number | null
            /** Min */
            min?: number | null
            /** Name */
            name: string
            /** Optional */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_integer
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_integer"
            /** Value */
            value?: number | null
        }
        /** LabelValue */
        LabelValue: {
            /** Label */
            label: string
            /** Selected */
            selected: boolean
            /** Value */
            value: string
        }
        /** MessageExceptionModel */
        MessageExceptionModel: {
            /** Err Code */
            err_code: number
            /** Err Msg */
            err_msg: string
        }
        /** Organization */
        Organization: {
            /**
             * Name
             * @description Name of the organization responsible for the service
             */
            name: string
            /**
             * Url
             * Format: uri
             * @description URL of the website of the organization (RFC 3986 format)
             */
            url: string
        }
        /** ParsedTool */
        ParsedTool: {
            /** Citations */
            citations: components["schemas"]["Citation"][]
            /** Description */
            description: string | null
            /** Edam Operations */
            edam_operations: string[]
            /** Edam Topics */
            edam_topics: string[]
            /** Help */
            help: string | null
            /** Id */
            id: string
            /** Inputs */
            inputs: (
                | components["schemas"]["CwlIntegerParameterModel"]
                | components["schemas"]["CwlFloatParameterModel"]
                | components["schemas"]["CwlStringParameterModel"]
                | components["schemas"]["CwlBooleanParameterModel"]
                | components["schemas"]["CwlNullParameterModel"]
                | components["schemas"]["CwlFileParameterModel"]
                | components["schemas"]["CwlDirectoryParameterModel"]
                | components["schemas"]["CwlUnionParameterModel"]
                | components["schemas"]["TextParameterModel"]
                | components["schemas"]["IntegerParameterModel"]
                | components["schemas"]["FloatParameterModel"]
                | components["schemas"]["BooleanParameterModel"]
                | components["schemas"]["HiddenParameterModel"]
                | components["schemas"]["SelectParameterModel"]
                | components["schemas"]["DataParameterModel"]
                | components["schemas"]["DataCollectionParameterModel"]
                | components["schemas"]["DataColumnParameterModel"]
                | components["schemas"]["DirectoryUriParameterModel"]
                | components["schemas"]["RulesParameterModel"]
                | components["schemas"]["DrillDownParameterModel"]
                | components["schemas"]["GroupTagParameterModel"]
                | components["schemas"]["BaseUrlParameterModel"]
                | components["schemas"]["GenomeBuildParameterModel"]
                | components["schemas"]["ColorParameterModel"]
                | components["schemas"]["ConditionalParameterModel"]
                | components["schemas"]["RepeatParameterModel"]
                | components["schemas"]["SectionParameterModel"]
            )[]
            /** License */
            license: string | null
            /** Name */
            name: string
            /** Outputs */
            outputs: (
                | components["schemas"]["ToolOutputDataset"]
                | components["schemas"]["ToolOutputCollection"]
                | components["schemas"]["ToolOutputText"]
                | components["schemas"]["ToolOutputInteger"]
                | components["schemas"]["ToolOutputFloat"]
                | components["schemas"]["ToolOutputBoolean"]
            )[]
            /** Profile */
            profile: string | null
            /** Version */
            version: string | null
            /** Xrefs */
            xrefs: components["schemas"]["XrefDict"][]
        }
        /** RepeatParameterModel */
        RepeatParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Max */
            max?: number | null
            /** Min */
            min?: number | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_repeat
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_repeat"
            /** Parameters */
            parameters: (
                | components["schemas"]["CwlIntegerParameterModel"]
                | components["schemas"]["CwlFloatParameterModel"]
                | components["schemas"]["CwlStringParameterModel"]
                | components["schemas"]["CwlBooleanParameterModel"]
                | components["schemas"]["CwlNullParameterModel"]
                | components["schemas"]["CwlFileParameterModel"]
                | components["schemas"]["CwlDirectoryParameterModel"]
                | components["schemas"]["CwlUnionParameterModel"]
                | components["schemas"]["TextParameterModel"]
                | components["schemas"]["IntegerParameterModel"]
                | components["schemas"]["FloatParameterModel"]
                | components["schemas"]["BooleanParameterModel"]
                | components["schemas"]["HiddenParameterModel"]
                | components["schemas"]["SelectParameterModel"]
                | components["schemas"]["DataParameterModel"]
                | components["schemas"]["DataCollectionParameterModel"]
                | components["schemas"]["DataColumnParameterModel"]
                | components["schemas"]["DirectoryUriParameterModel"]
                | components["schemas"]["RulesParameterModel"]
                | components["schemas"]["DrillDownParameterModel"]
                | components["schemas"]["GroupTagParameterModel"]
                | components["schemas"]["BaseUrlParameterModel"]
                | components["schemas"]["GenomeBuildParameterModel"]
                | components["schemas"]["ColorParameterModel"]
                | components["schemas"]["ConditionalParameterModel"]
                | components["schemas"]["RepeatParameterModel"]
                | components["schemas"]["SectionParameterModel"]
            )[]
        }
        /** RepositoriesByCategory */
        RepositoriesByCategory: {
            /** Description */
            description: string
            /** Id */
            id: string
            /** Name */
            name: string
            /** Repositories */
            repositories: components["schemas"]["Repository"][]
            /** Repository Count */
            repository_count: number
        }
        /** Repository */
        Repository: {
            /** Create Time */
            create_time: string
            /** Deleted */
            deleted: boolean
            /** Deprecated */
            deprecated: boolean
            /** Description */
            description: string
            /** Homepage Url */
            homepage_url?: string | null
            /** Id */
            id: string
            /** Name */
            name: string
            /** Owner */
            owner: string
            /** Private */
            private: boolean
            /** Remote Repository Url */
            remote_repository_url?: string | null
            /** Times Downloaded */
            times_downloaded: number
            /** Type */
            type: string
            /** Update Time */
            update_time: string
            /** User Id */
            user_id: string
        }
        /** RepositoryDependency */
        RepositoryDependency: {
            /** Changeset Revision */
            changeset_revision: string
            /** Downloadable */
            downloadable: boolean
            /** Has Repository Dependencies */
            has_repository_dependencies: boolean
            /** Id */
            id: string
            /** Includes Datatypes */
            includes_datatypes?: boolean | null
            /** Includes Tool Dependencies */
            includes_tool_dependencies?: boolean | null
            /** Includes Tools */
            includes_tools: boolean
            /** Includes Tools For Display In Tool Panel */
            includes_tools_for_display_in_tool_panel: boolean
            /** Includes Workflows */
            includes_workflows?: boolean | null
            /** Invalid Tools */
            invalid_tools: string[]
            /** Malicious */
            malicious: boolean
            /** Missing Test Components */
            missing_test_components: boolean
            /** Numeric Revision */
            numeric_revision: number
            repository: components["schemas"]["Repository"]
            /** Repository Dependencies */
            repository_dependencies: components["schemas"]["RepositoryDependency"][]
            /** Repository Id */
            repository_id: string
            /** Tools */
            tools?: components["schemas"]["RepositoryTool"][] | null
        }
        /** RepositoryExtraInstallInfo */
        RepositoryExtraInstallInfo: {
            /** Changeset Revision */
            changeset_revision: string
            /** Ctx Rev */
            ctx_rev: string
            /** Description */
            description: string
            /** Name */
            name: string
            /** Repository Clone Url */
            repository_clone_url: string
            /** Repository Dependencies */
            repository_dependencies?: Record<string, never> | null
            /** Repository Owner */
            repository_owner: string
        }
        /** RepositoryMetadata */
        RepositoryMetadata: {
            [key: string]: components["schemas"]["RepositoryRevisionMetadata"]
        }
        /** RepositoryMetadataInstallInfo */
        RepositoryMetadataInstallInfo: {
            /** Changeset Revision */
            changeset_revision: string
            /** Downloadable */
            downloadable: boolean
            /** Has Repository Dependencies */
            has_repository_dependencies: boolean
            /** Id */
            id: string
            /** Includes Tools */
            includes_tools: boolean
            /** Includes Tools For Display In Tool Panel */
            includes_tools_for_display_in_tool_panel: boolean
            /** Malicious */
            malicious: boolean
            /** Repository Id */
            repository_id: string
            /** Url */
            url: string
            /** Valid Tools */
            valid_tools: components["schemas"]["ValidTool"][]
        }
        /** RepositoryPermissions */
        RepositoryPermissions: {
            /** Allow Push */
            allow_push: string[]
            /** Can Manage */
            can_manage: boolean
            /** Can Push */
            can_push: boolean
        }
        /** RepositoryRevisionMetadata */
        RepositoryRevisionMetadata: {
            /** Changeset Revision */
            changeset_revision: string
            /** Downloadable */
            downloadable: boolean
            /** Has Repository Dependencies */
            has_repository_dependencies: boolean
            /** Id */
            id: string
            /** Includes Datatypes */
            includes_datatypes?: boolean | null
            /** Includes Tool Dependencies */
            includes_tool_dependencies?: boolean | null
            /** Includes Tools */
            includes_tools: boolean
            /** Includes Tools For Display In Tool Panel */
            includes_tools_for_display_in_tool_panel: boolean
            /** Includes Workflows */
            includes_workflows?: boolean | null
            /** Invalid Tools */
            invalid_tools: string[]
            /** Malicious */
            malicious: boolean
            /** Missing Test Components */
            missing_test_components: boolean
            /** Numeric Revision */
            numeric_revision: number
            repository: components["schemas"]["Repository"]
            /** Repository Dependencies */
            repository_dependencies: components["schemas"]["RepositoryDependency"][]
            /** Repository Id */
            repository_id: string
            /** Tools */
            tools?: components["schemas"]["RepositoryTool"][] | null
        }
        /** RepositoryRevisionReadmes */
        RepositoryRevisionReadmes: {
            [key: string]: string
        }
        /** RepositorySearchHit */
        RepositorySearchHit: {
            repository: components["schemas"]["RepositorySearchResult"]
            /** Score */
            score: number
        }
        /** RepositorySearchResult */
        RepositorySearchResult: {
            /** Approved */
            approved: boolean
            /** Categories */
            categories: string
            /** Description */
            description: string
            /** Full Last Updated */
            full_last_updated: string
            /** Homepage Url */
            homepage_url?: string | null
            /** Id */
            id: string
            /** Last Update */
            last_update?: string | null
            /** Long Description */
            long_description?: string | null
            /** Name */
            name: string
            /** Remote Repository Url */
            remote_repository_url?: string | null
            /** Repo Lineage */
            repo_lineage: string
            /** Repo Owner Username */
            repo_owner_username: string
            /** Times Downloaded */
            times_downloaded: number
        }
        /** RepositorySearchResults */
        RepositorySearchResults: {
            /** Hits */
            hits: components["schemas"]["RepositorySearchHit"][]
            /** Hostname */
            hostname: string
            /** Page */
            page: string
            /** Page Size */
            page_size: string
            /** Total Results */
            total_results: string
        }
        /** RepositoryTool */
        RepositoryTool: {
            /** Description */
            description: string
            /** Guid */
            guid: string
            /** Id */
            id: string
            /** Name */
            name: string
            /** Requirements */
            requirements: unknown[]
            /** Tool Config */
            tool_config: string
            /** Tool Type */
            tool_type: string
            /** Version */
            version: string
        }
        /** RepositoryUpdate */
        RepositoryUpdate:
            | components["schemas"]["ValidRepostiroyUpdateMessage"]
            | components["schemas"]["FailedRepositoryUpdateMessage"]
        /** ResetMetadataOnRepositoryResponse */
        ResetMetadataOnRepositoryResponse: {
            /** Repository Status */
            repository_status: string[]
            /** Start Time */
            start_time: string
            /** Status */
            status: string
            /** Stop Time */
            stop_time: string
        }
        /** RulesParameterModel */
        RulesParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_rules
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_rules"
        }
        /** SectionParameterModel */
        SectionParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_section
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_section"
            /** Parameters */
            parameters: (
                | components["schemas"]["CwlIntegerParameterModel"]
                | components["schemas"]["CwlFloatParameterModel"]
                | components["schemas"]["CwlStringParameterModel"]
                | components["schemas"]["CwlBooleanParameterModel"]
                | components["schemas"]["CwlNullParameterModel"]
                | components["schemas"]["CwlFileParameterModel"]
                | components["schemas"]["CwlDirectoryParameterModel"]
                | components["schemas"]["CwlUnionParameterModel"]
                | components["schemas"]["TextParameterModel"]
                | components["schemas"]["IntegerParameterModel"]
                | components["schemas"]["FloatParameterModel"]
                | components["schemas"]["BooleanParameterModel"]
                | components["schemas"]["HiddenParameterModel"]
                | components["schemas"]["SelectParameterModel"]
                | components["schemas"]["DataParameterModel"]
                | components["schemas"]["DataCollectionParameterModel"]
                | components["schemas"]["DataColumnParameterModel"]
                | components["schemas"]["DirectoryUriParameterModel"]
                | components["schemas"]["RulesParameterModel"]
                | components["schemas"]["DrillDownParameterModel"]
                | components["schemas"]["GroupTagParameterModel"]
                | components["schemas"]["BaseUrlParameterModel"]
                | components["schemas"]["GenomeBuildParameterModel"]
                | components["schemas"]["ColorParameterModel"]
                | components["schemas"]["ConditionalParameterModel"]
                | components["schemas"]["RepeatParameterModel"]
                | components["schemas"]["SectionParameterModel"]
            )[]
        }
        /** SelectParameterModel */
        SelectParameterModel: {
            /** Argument */
            argument?: string | null
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Multiple */
            multiple: boolean
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /** Options */
            options?: components["schemas"]["LabelValue"][] | null
            /**
             * Parameter Type
             * @default gx_select
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_select"
        }
        /** Service */
        Service: {
            /**
             * Contacturl
             * @description URL of the contact for the provider of this service, e.g. a link to a contact form (RFC 3986 format), or an email (RFC 2368 format).
             */
            contactUrl?: string | null
            /**
             * Createdat
             * @description Timestamp describing when the service was first deployed and available (RFC 3339 format)
             */
            createdAt?: string | null
            /**
             * Description
             * @description Description of the service. Should be human readable and provide information about the service.
             */
            description?: string | null
            /**
             * Documentationurl
             * @description URL of the documentation of this service (RFC 3986 format). This should help someone learn how to use your service, including any specifics required to access data, e.g. authentication.
             */
            documentationUrl?: string | null
            /**
             * Environment
             * @description Environment the service is running in. Use this to distinguish between production, development and testing/staging deployments. Suggested values are prod, test, dev, staging. However this is advised and not enforced.
             */
            environment?: string | null
            /**
             * Id
             * @description Unique ID of this service. Reverse domain name notation is recommended, though not required. The identifier should attempt to be globally unique so it can be used in downstream aggregator services e.g. Service Registry.
             */
            id: string
            /**
             * Name
             * @description Name of this service. Should be human readable.
             */
            name: string
            /** @description Organization providing the service */
            organization: components["schemas"]["Organization"]
            type: components["schemas"]["ServiceType"]
            /**
             * Updatedat
             * @description Timestamp describing when the service was last updated (RFC 3339 format)
             */
            updatedAt?: string | null
            /**
             * Version
             * @description Version of the service being described. Semantic versioning is recommended, but other identifiers, such as dates or commit hashes, are also allowed. The version should be changed whenever the service is updated.
             */
            version: string
        }
        /** ServiceType */
        ServiceType: {
            /**
             * Artifact
             * @description Name of the API or GA4GH specification implemented. Official GA4GH types should be assigned as part of standards approval process. Custom artifacts are supported.
             */
            artifact: string
            /**
             * Group
             * @description Namespace in reverse domain name format. Use `org.ga4gh` for implementations compliant with official GA4GH specifications. For services with custom APIs not standardized by GA4GH, or implementations diverging from official GA4GH specifications, use a different namespace (e.g. your organization's reverse domain name).
             */
            group: string
            /**
             * Version
             * @description Version of the API or specification. GA4GH specifications use semantic versioning.
             */
            version: string
        }
        /** TextParameterModel */
        TextParameterModel: {
            /**
             * Area
             * @default false
             */
            area: boolean
            /** Argument */
            argument?: string | null
            /**
             * Default Options
             * @default []
             */
            default_options: components["schemas"]["LabelValue"][]
            /** Help */
            help?: string | null
            /**
             * Hidden
             * @default false
             */
            hidden: boolean
            /**
             * Is Dynamic
             * @default false
             */
            is_dynamic: boolean
            /** Label */
            label?: string | null
            /** Name */
            name: string
            /**
             * Optional
             * @default false
             */
            optional: boolean
            /**
             * Parameter Type
             * @default gx_text
             * @constant
             * @enum {string}
             */
            parameter_type: "gx_text"
            /** Value */
            value?: string | null
        }
        /** Tool */
        Tool: {
            /**
             * Aliases
             * @description Support for this parameter is optional for tool registries that support aliases.
             *     A list of strings that can be used to identify this tool which could be  straight up URLs.
             *     This can be used to expose alternative ids (such as GUIDs) for a tool
             *     for registries. Can be used to match tools across registries.
             */
            aliases?: string[] | null
            /**
             * Checker Url
             * @description Optional url to the checker tool that will exit successfully if this tool produced the expected result given test data.
             */
            checker_url?: string | null
            /**
             * Description
             * @description The description of the tool.
             */
            description?: string | null
            /**
             * Has Checker
             * @description Whether this tool has a checker tool associated with it.
             */
            has_checker?: boolean | null
            /**
             * Id
             * @description A unique identifier of the tool, scoped to this registry.
             */
            id: string
            /**
             * Meta Version
             * @description The version of this tool in the registry. Iterates when fields like the description, author, etc. are updated.
             */
            meta_version?: string | null
            /**
             * Name
             * @description The name of the tool.
             */
            name?: string | null
            /**
             * Organization
             * @description The organization that published the image.
             */
            organization: string
            toolclass: components["schemas"]["ToolClass"]
            /**
             * Url
             * @description The URL for this tool in this registry.
             */
            url: string
            /**
             * Versions
             * @description A list of versions for this tool.
             */
            versions: components["schemas"]["ToolVersion"][]
        }
        /** ToolClass */
        ToolClass: {
            /**
             * Description
             * @description A longer explanation of what this class is and what it can accomplish.
             */
            description?: string | null
            /**
             * Id
             * @description The unique identifier for the class.
             */
            id?: string | null
            /**
             * Name
             * @description A short friendly name for the class.
             */
            name?: string | null
        }
        /** ToolOutputBoolean */
        ToolOutputBoolean: {
            /** Hidden */
            hidden: boolean
            /** Label */
            label: string | null
            /** Name */
            name: string
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "boolean"
        }
        /** ToolOutputCollection */
        ToolOutputCollection: {
            /** Hidden */
            hidden: boolean
            /** Label */
            label: string | null
            /** Name */
            name: string
            structure: components["schemas"]["ToolOutputCollectionStructure"]
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "collection"
        }
        /** ToolOutputCollectionStructure */
        ToolOutputCollectionStructure: {
            /** Collection Type */
            collection_type: string | null
            /** Collection Type From Rules */
            collection_type_from_rules: string | null
            /** Collection Type Source */
            collection_type_source: string | null
            /** Discover Datasets */
            discover_datasets:
                | (
                      | components["schemas"]["FilePatternDatasetCollectionDescription"]
                      | components["schemas"]["ToolProvidedMetadataDatasetCollection"]
                  )[]
                | null
            /** Structured Like */
            structured_like: string | null
        }
        /** ToolOutputDataset */
        ToolOutputDataset: {
            /** Discover Datasets */
            discover_datasets:
                | (
                      | components["schemas"]["FilePatternDatasetCollectionDescription"]
                      | components["schemas"]["ToolProvidedMetadataDatasetCollection"]
                  )[]
                | null
            /** Format */
            format: string
            /** Format Source */
            format_source: string | null
            /** Hidden */
            hidden: boolean
            /** Label */
            label: string | null
            /** Metadata Source */
            metadata_source: string | null
            /** Name */
            name: string
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "data"
        }
        /** ToolOutputFloat */
        ToolOutputFloat: {
            /** Hidden */
            hidden: boolean
            /** Label */
            label: string | null
            /** Name */
            name: string
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "float"
        }
        /** ToolOutputInteger */
        ToolOutputInteger: {
            /** Hidden */
            hidden: boolean
            /** Label */
            label: string | null
            /** Name */
            name: string
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "integer"
        }
        /** ToolOutputText */
        ToolOutputText: {
            /** Hidden */
            hidden: boolean
            /** Label */
            label: string | null
            /** Name */
            name: string
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "text"
        }
        /** ToolProvidedMetadataDatasetCollection */
        ToolProvidedMetadataDatasetCollection: {
            /** Assign Primary Output */
            assign_primary_output: boolean
            /** Directory */
            directory: string | null
            /**
             * Discover Via
             * @constant
             * @enum {string}
             */
            discover_via: "tool_provided_metadata"
            /** Format */
            format: string | null
            /** Match Relative Path */
            match_relative_path: boolean
            /** Recurse */
            recurse: boolean
            /** Visible */
            visible: boolean
        }
        /** ToolVersion */
        ToolVersion: {
            /**
             * Author
             * @description Contact information for the author of this version of the tool in the registry. (More complex authorship information is handled by the descriptor).
             */
            author?: string[] | null
            /**
             * Containerfile
             * @description Reports if this tool has a containerfile available. (For Docker-based tools, this would indicate the presence of a Dockerfile)
             */
            containerfile?: boolean | null
            /**
             * Descriptor Type
             * @description The type (or types) of descriptors available.
             */
            descriptor_type?: components["schemas"]["DescriptorType"][] | null
            /**
             * Descriptor Type Version
             * @description A map providing information about the language versions used in this tool. The keys should be the same values used in the `descriptor_type` field, and the value should be an array of all the language versions used for the given `descriptor_type`. Depending on the `descriptor_type` (e.g. CWL) multiple version values may be used in a single tool.
             */
            descriptor_type_version?: {
                [key: string]: components["schemas"]["DescriptorTypeVersion"][]
            } | null
            /**
             * Id
             * @description An identifier of the version of this tool for this particular tool registry.
             */
            id: string
            /**
             * Images
             * @description All known docker images (and versions/hashes) used by this tool. If the tool has to evaluate any of the docker images strings at runtime, those ones cannot be reported here.
             */
            images?: components["schemas"]["ImageData"][] | null
            /**
             * Included Apps
             * @description An array of IDs for the applications that are stored inside this tool.
             */
            included_apps?: string[] | null
            /**
             * Is Production
             * @description This version of a tool is guaranteed to not change over time (for example, a  tool built from a tag in git as opposed to a branch). A production quality tool  is required to have a checksum
             */
            is_production?: boolean | null
            /**
             * Meta Version
             * @description The version of this tool version in the registry. Iterates when fields like the description, author, etc. are updated.
             */
            meta_version?: string | null
            /**
             * Name
             * @description The name of the version.
             */
            name?: string | null
            /**
             * Signed
             * @description Reports whether this version of the tool has been signed.
             */
            signed?: boolean | null
            /**
             * Url
             * @description The URL for this tool version in this registry.
             */
            url: string
            /**
             * Verified
             * @description Reports whether this tool has been verified by a specific organization or individual.
             */
            verified?: boolean | null
            /**
             * Verified Source
             * @description Source of metadata that can support a verified tool, such as an email or URL.
             */
            verified_source?: string[] | null
        }
        /** UiChangePasswordRequest */
        UiChangePasswordRequest: {
            /** Current */
            current: string
            /** Password */
            password: string
        }
        /** UiLoginRequest */
        UiLoginRequest: {
            /** Login */
            login: string
            /** Password */
            password: string
            /** Session Csrf Token */
            session_csrf_token: string
        }
        /** UiLoginResponse */
        UiLoginResponse: Record<string, never>
        /** UiLogoutRequest */
        UiLogoutRequest: {
            /**
             * Logout All
             * @default false
             */
            logout_all: boolean
            /** Session Csrf Token */
            session_csrf_token: string
        }
        /** UiLogoutResponse */
        UiLogoutResponse: Record<string, never>
        /** UiRegisterRequest */
        UiRegisterRequest: {
            /** Bear Field */
            bear_field: string
            /** Email */
            email: string
            /** Password */
            password: string
            /** Username */
            username: string
        }
        /** UiRegisterResponse */
        UiRegisterResponse: {
            /**
             * Activation Error
             * @default false
             */
            activation_error: boolean
            /**
             * Activation Sent
             * @default false
             */
            activation_sent: boolean
            /** Contact Email */
            contact_email?: string | null
            /** Email */
            email: string
        }
        /** UpdateRepositoryRequest */
        UpdateRepositoryRequest: {
            /** Category IDs */
            category_ids?: string[] | null
            /** Description */
            description?: string | null
            /** Homepage Url */
            homepage_url?: string | null
            /** Name */
            name?: string | null
            /** Remote Repository Url */
            remote_repository_url?: string | null
            /** Synopsis */
            synopsis?: string | null
            /** Type */
            type?: ("repository_suite_definition" | "tool_dependency_definition" | "unrestricted") | null
        }
        /** UserV2 */
        UserV2: {
            /** Id */
            id: string
            /** Is Admin */
            is_admin: boolean
            /** Username */
            username: string
        }
        /** ValidRepostiroyUpdateMessage */
        ValidRepostiroyUpdateMessage: {
            /** Message */
            message: string
        }
        /** ValidTool */
        ValidTool: {
            /** Add To Tool Panel */
            add_to_tool_panel: boolean
            /** Description */
            description: string
            /** Guid */
            guid: string
            /** Id */
            id: string
            /** Name */
            name: string
            /** Requirements */
            requirements: unknown[]
            /** Tests */
            tests: unknown[]
            /** Tool Config */
            tool_config: string
            /** Tool Type */
            tool_type: string
            /** Version */
            version: string
            /** Version String Cmd */
            version_string_cmd?: string | null
        }
        /** Version */
        Version: {
            /**
             * Api Version
             * @default v1
             */
            api_version: string
            /** Version */
            version: string
            /** Version Major */
            version_major: string
        }
        /** XrefDict */
        XrefDict: {
            /** Reftype */
            reftype: string
            /** Value */
            value: string
        }
    }
    responses: never
    parameters: never
    requestBodies: never
    headers: never
    pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
    authenticate__baseauth: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["APIKeyResponse"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    categories__index: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["Category"][]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    categories__create: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCategoryRequest"]
            }
        }
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["Category"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    categories__show: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the category. */
                encoded_category_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["Category"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    categories__repositories: {
        parameters: {
            query?: {
                installable?: boolean
                sort_key?: string
                sort_order?: string
                page?: number | null
            }
            header?: never
            path: {
                /** @description The encoded database identifier of the category. */
                encoded_category_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["RepositoriesByCategory"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    tools_trs_service_info: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["Service"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    tools__trs_tool_classes: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["ToolClass"][]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    tools__trs_index: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": unknown
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    tools__trs_get: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description See also https://ga4gh.github.io/tool-registry-service-schemas/DataModel/#trs-tool-and-trs-tool-version-ids */
                tool_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["Tool"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    tools__trs_get_versions: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description See also https://ga4gh.github.io/tool-registry-service-schemas/DataModel/#trs-tool-and-trs-tool-version-ids */
                tool_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["ToolVersion"][]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__index: {
        parameters: {
            query?: {
                q?: string | null
                page?: number | null
                page_size?: number | null
                deleted?: boolean | null
                owner?: string | null
                name?: string | null
            }
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json":
                        | components["schemas"]["RepositorySearchResults"]
                        | components["schemas"]["Repository"][]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__create: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateRepositoryRequest"]
            }
        }
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["Repository"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__get_ordered_installable_revisions: {
        parameters: {
            query?: {
                owner?: string | null
                name?: string | null
                tsr_id?: string | null
            }
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": string[]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__legacy_install_info: {
        parameters: {
            query: {
                /** @description Name of the target repository. */
                name: string
                /** @description Owner of the target repository. */
                owner: string
                /** @description Changeset of the target repository. */
                changeset_revision: string
            }
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": unknown[]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__install_info: {
        parameters: {
            query: {
                /** @description Name of the target repository. */
                name: string
                /** @description Owner of the target repository. */
                owner: string
                /** @description Changeset of the target repository. */
                changeset_revision: string
            }
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["InstallInfo"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__reset_legacy: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["ResetMetadataOnRepositoryResponse"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__update: {
        parameters: {
            query: {
                owner?: string | null
                name?: string | null
                changeset_revision: string
                hexlify?: boolean | null
            }
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": unknown
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__show: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["DetailedRepository"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__update_repository: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
            }
            cookie?: never
        }
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateRepositoryRequest"]
            }
        }
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["DetailedRepository"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__show_allow_push: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": string[]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__add_allow_push: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
                /** @description The target username. */
                username: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": string[]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__remove_allow_push: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
                /** @description The target username. */
                username: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": string[]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__create_revision: {
        parameters: {
            query?: {
                /** @description Set commit message as a query parameter. */
                commit_message?: string | null
            }
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
            }
            cookie?: never
        }
        requestBody?: {
            content: {
                "multipart/form-data": components["schemas"]["Body_repositories__create_revision"]
            }
        }
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["RepositoryUpdate"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__set_deprecated: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__unset_deprecated: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__metadata: {
        parameters: {
            query?: {
                /** @description Include only downloadable repositories. */
                downloadable_only?: boolean
            }
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": Record<string, never>
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__permissions: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["RepositoryPermissions"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__reset: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["ResetMetadataOnRepositoryResponse"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__set_malicious: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
                /** @description The changeset revision corresponding to the target revision of the target repository. */
                changeset_revision: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__unset_malicious: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
                /** @description The changeset revision corresponding to the target revision of the target repository. */
                changeset_revision: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__readmes: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
                /** @description The changeset revision corresponding to the target revision of the target repository. */
                changeset_revision: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["RepositoryRevisionReadmes"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    tools__index: {
        parameters: {
            query: {
                q: string
                page?: number
                page_size?: number
            }
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": unknown
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    tools__build_search_index: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["BuildSearchIndexResponse"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    tools__parameter_model: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description See also https://ga4gh.github.io/tool-registry-service-schemas/DataModel/#trs-tool-and-trs-tool-version-ids */
                tool_id: string
                /** @description The full version string defined on the Galaxy tool wrapper. */
                tool_version: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["ParsedTool"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    tools__parameter_request_model: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description See also https://ga4gh.github.io/tool-registry-service-schemas/DataModel/#trs-tool-and-trs-tool-version-ids */
                tool_id: string
                /** @description The full version string defined on the Galaxy tool wrapper. */
                tool_version: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": unknown
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    users__index: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["UserV2"][]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    users__create: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserRequest"]
            }
        }
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["UserV2"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    users__current: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["UserV2"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    users__show: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the user. */
                encoded_user_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["UserV2"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    users__get_or_create_api_key: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the user. */
                encoded_user_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": string
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    users__create_api_key: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the user. */
                encoded_user_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": string
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    users__delete_api_key: {
        parameters: {
            query?: never
            header?: never
            path: {
                /** @description The encoded database identifier of the user. */
                encoded_user_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    configuration__version: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["Version"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    users__internal_change_password: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                "application/json": components["schemas"]["UiChangePasswordRequest"]
            }
        }
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    users__internal_login: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                "application/json": components["schemas"]["UiLoginRequest"]
            }
        }
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["UiLoginResponse"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    users__internal_logout: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                "application/json": components["schemas"]["UiLogoutRequest"]
            }
        }
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["UiLogoutResponse"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    users__internal_register: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                "application/json": components["schemas"]["UiRegisterRequest"]
            }
        }
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["UiRegisterResponse"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
    repositories__internal_metadata: {
        parameters: {
            query?: {
                /** @description Include only downloadable repositories. */
                downloadable_only?: boolean
            }
            header?: never
            path: {
                /** @description The encoded database identifier of the repository. */
                encoded_repository_id: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["RepositoryMetadata"]
                }
            }
            /** @description Request Error */
            "4XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
            /** @description Server Error */
            "5XX": {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    "application/json": components["schemas"]["MessageExceptionModel"]
                }
            }
        }
    }
}
