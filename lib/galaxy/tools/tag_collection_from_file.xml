<tool id="__TAG_FROM_FILE__"
      name="Tag elements"
      version="1.0.0"
      tool_type="tag_from_file">
    <description></description>
    <type class="TagFromFileTool" module="galaxy.tools" />
    <action module="galaxy.tools.actions.model_operations"
            class="ModelOperationToolAction"/>
    <edam_operations>
        <edam_operation>operation_3096</edam_operation>
    </edam_operations>
    <inputs>
        <param type="data_collection" name="input" label="Input Collection" help="A tabular file indicating how to tag collection elements."/>
        <param type="data" name="tags" format="tabular" label="Tag collection elements according to this file"/>
        <param name="how" type="select" label="How should the tags be updated">
            <option value="add">New tags will be added, existing tags will be kept</option>
            <option value="set">New tags will be added, existing tags will be removed</option>
            <option value="remove">The tags listed will be removed</option>
        </param>
    </inputs>
    <outputs>
        <collection name="output" format_source="input" type_source="input" label="${on_string} (Tagged)" >
        </collection>
    </outputs>
    <tests>
        <test>
            <param name="input">
                <collection type="list">
                    <element name="forward" value="simple_line.txt" tags="zoo" />
                    <element name="reverse" value="simple_line_alternative.txt" />
                </collection>
            </param>
            <param name="tags" value="new_tags_1.txt" ftype="txt" />
            <param name="how" value="add"/>
            <output_collection name="output" type="list">
                <element name="forward">
                    <assert_contents>
                        <has_text_matching expression="^This is a line of text.\n$" />
                    </assert_contents>
                    <metadata name="tags" value="name:forward,alias:f,alias:r1,group:sample1,orientation:forward,zoo" />
                </element>
                <element name="reverse">
                    <assert_contents>
                        <has_text_matching expression="^This is a different line of text.\n$" />
                    </assert_contents>
                    <metadata name="tags" value="name:reverse,alias:r,alias:r2,group:sample2,orientation:reverse" />
                </element>
            </output_collection>
        </test>
        <test>
            <param name="input">
                <collection type="list:paired">
                    <element name="i1">
                        <collection type="paired">
                            <element name="forward" value="simple_line.txt" />
                            <element name="reverse" value="simple_line_alternative.txt" />
                        </collection>
                    </element>
                </collection>
            </param>
            <param name="how" value="set"/>
            <param name="tags" value="new_tags_1.txt" ftype="txt" />
            <output_collection name="output" type="list:paired">
                <element name="i1">
                    <element name="forward">
                        <assert_contents>
                            <has_text_matching expression="^This is a line of text.\n$" />
                        </assert_contents>
                        <metadata name="tags" value="name:forward,alias:f,alias:r1,group:sample1,orientation:forward" />
                    </element>
                    <element name="reverse">
                        <assert_contents>
                            <has_text_matching expression="^This is a different line of text.\n$" />
                        </assert_contents>
                        <metadata name="tags" value="name:reverse,alias:r,alias:r2,group:sample2,orientation:reverse" />
                    </element>
                </element>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[

========
Synopsis
========

Adds tags (including name: and group: tags) to collection elements.

===========
Description
===========

The relationship between element names and tags is specified in a two column tab-delimited file. This file may contain less entries than elements in the collection. In that case only matching list identifiers will be tagged.

To create name: or group: tags prepend them with ``#`` (you can also use ``name:``) or ``group:``, respectively.

===============
More about tags
===============

Galaxy allows tagging datasets to facilitate analyses. There are several types of tags including simple tags, name tags, and group tags. **Simple** tags allow you to attach an alternative label to a dataset, which will make it easier to find it later. **Name** tags allow you to track propagation of a dataset through the analyses: all datasets derived from the initial dataset labeled with a name tag will inherit it. Finally, **group** tags allow you to label group of datasets. This is useful. for example, for differential expression analysis where you can have two groups of datasets labeled as "treatment" and "control".

To learn mote about tags go to `our training site`_.

.. _our training site: https://training.galaxyproject.org/training-material/search?query=tags



    ]]></help>
</tool>
