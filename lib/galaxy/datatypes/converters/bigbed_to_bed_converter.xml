<tool id="ucsc_bigbedtobed" name="Convert from bigBed to ascii bed format." version="@TOOL_VERSION@+galaxy@SUFFIX_VERSION@" profile="20.01">
    <description>Convert bigBed to BED</description>
    <macros>
        <token name="@TOOL_VERSION@">377</token>
        <token name="@SUFFIX_VERSION@">0</token>
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">ucsc-bigbedtobed</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        bigBedToBed '${bigbed_input}'
        #if $chrom
            -chrom='${chrom}'
        #end if
        #if str($start)
            -start=$start
        #end if
        #if str($end)
            -end=$end
        #end if
        output.bed
    ]]></command>
    <inputs>
        <param name="bigbed_input" type="data" format="bigbed" label="BigBed input"/>
        <param argument="-chrom" type="text" value="" optional="true" label="Restrict output to given chromosome">
            <sanitizer invalid_char="">
                <valid initial="string.letters,string.digits">
                    <add value="+" />
                    <add value="-" />
                    <add value=" " />
                    <add value="_" />
                </valid>
            </sanitizer>
            <validator type="regex">[A-Za-z0-9 -_+]+</validator>
        </param>
        <param argument="-start" type="integer" min="0" optional="true" label="Restrict output to only that over start" />
        <param argument="-end" type="integer" min="0" optional="true" label="Restrict output to only that under end" />
    </inputs>
    <outputs>
        <data name="bed_output" format="bed" from_work_dir="output.bed" label="${tool.name} on ${on_string}: bed"/>
    </outputs>
    <tests>
        <!--Test 01 -->
        <test expect_num_outputs="1">
            <param name="bigbed_input" value="1.bigbed"/>
	    <output name="bed_output" ftype="bed">
	        <assert_contents>
                    <has_n_lines n="3339"/>
                </assert_contents>
	    </output>
	</test>
        <!--Test 02 -->
        <test expect_num_outputs="1">
            <param name="bigbed_input" value="1.bigbed"/>
            <param name="chrom" value="chr21"/>
	    <output name="bed_output" ftype="bed">
            	<assert_contents>
          		<has_n_lines n="0"/>
        	</assert_contents>
	    </output>
            <assert_command>
                <has_text text="-chrom='chr21'"/>
	    </assert_command>
        </test>
        <!--Test 03 -->
        <test expect_num_outputs="1">
            <param name="bigbed_input" value="1.bigbed"/>
            <param name="start" value="100"/>
	    <output name="bed_output" ftype="bed">
	    	<assert_contents>
          		<has_n_lines n="3339"/>
        	</assert_contents>
	    </output>
            <assert_command>
                <has_text text="-start=100"/>
	    </assert_command>
        </test>
        <!--Test 04 -->
        <test expect_num_outputs="1">
            <param name="bigbed_input" value="1.bigbed"/>
            <param name="end" value="100000000"/>
	    <output name="bed_output" ftype="bed">
	    	<assert_contents>
          		<has_n_lines n="1966"/>
        	</assert_contents>
	    </output>
            <assert_command>
                <has_text text="-end=100000000"/>
	    </assert_command>
        </test>
    </tests>
    <help><![CDATA[

.. class:: infomark

**Purpose**

bigBedToBed - Convert from bigBed to BED format. This utility will convert a bigBed file
to a standard BED file, preserving the original structure while making it human-readable.

    ]]></help>
    <citations>
        <citation type="bibtex">
            @misc{githubKent,
            author = {Kent, Jim},
            year = {2021},
            title = {bigbedtobed},
            publisher = {GitHub},
            journal = {GitHub repository},
            url = {https://github.com/ucscGenomeBrowser/kent}}
        </citation>
    </citations>
</tool>
