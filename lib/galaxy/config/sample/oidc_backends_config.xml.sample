<?xml version="1.0"?>
<!--

This file shall be properly set for user authentication and authorization leveraging the OpenID Connect protocol.
Here we provide a quick reference for configuration setters, and we provide a complete documentation
at the following page:

    https://galaxyproject.org/authnz/config/oidc/



Quick Reference
_______________

- provider:         Sets the name of OpenID Connect (OIDC) Identity Provider (IdP).
                    The following IdPs are currently supported:

                        { "Google", "Globus" }

- client id:        Sets the id of this client (i.e., your Galaxy instance) with the IdP, which is
                    obtained from the IdP at client registration.
                    See: https://tools.ietf.org/html/rfc6749#section-2.2

- client secret:    A secret generated by IdP for your client upon its registration.
                    See https://tools.ietf.org/html/rfc6749#section-2.3.1

- label:            A label to identify this IDP to users in the UI. Defaults to the provider name if absent.

- require_create_confirmation:            A boolean value that decides whether a NewUserConfirmation page shows up.


IMPORTANT NOTES
_______________

While registering your client (i.e., your Galaxy instance), you would need to provide the IdP with a
`redirect_uri`: a URL at which the IdP will callback your Galaxy instance upon a successful user authentication.

This URL for your Galaxy instance is composed as:

    <host_url>/authnz/<provider>/callback


Some examples:

- using localhost to authenticate with Google:
    http://localhost:8080/authnz/google/callback

- using localhost to authenticate with Globus:
    http://localhost:8080/authnz/globus/callback

- using an instance hosted at `https://usegalaxy.org` with Google:
    https://usegalaxy.org/authnz/google/callback


Please mind `http` and `https`.

-->
<OIDC>
    <provider name="Google">
        <client_id> ... </client_id>
        <client_secret> ... </client_secret>
        <redirect_uri>http://localhost:8080/authnz/google/callback</redirect_uri>

        <prompt>consent</prompt>
        <!--The value of this parameter (i.e., prompt) specifies whether the Google authorization server should prompt
         a galaxy user for (re)authorization and consent. The possible values are: `none`, `consent`, and
         `select_account`. HOWEVER, DO NOT USE `none`, because it will cause authentication failure for new users.
         see the following page for more information:
         https://developers.google.com/identity/protocols/OpenIDConnect#prompt

         If you want the consent screen to be shown to the new users only, and re-authorization happen without
         asking for user's consent, then remove this attribute.

         NOTE: Galaxy sets OIDC 'scope' (requested scope of access to user's account) to `openid`. This is the
         minimum scope value that request only user's email address and profile name. For login process Galaxy
         does not need any more information, hence we request minimum possible information. By design, Google
         does NOT show consent screen for this scope, hence user will only see a login page when they try to
         login to Galaxy using their Google account.
        -->
        <icon>https://developers.google.com/identity/images/btn_google_signin_light_normal_web.png</icon>
        <!-- (Optional) Extra scopes you need to request for your implementation -->
        <!-- <extra_scopes>offline_access,something-else</extra_scopes> -->
    </provider>

    <!-- Documentation: http://globus-integration-examples.readthedocs.io -->
    <provider name="Globus">
        <client_id> ... </client_id>
        <client_secret> ... </client_secret>
        <redirect_uri>http://localhost:8080/authnz/globus/callback</redirect_uri>
        <prompt>consent</prompt>
    </provider>

    <provider name="Custos">
        <url>https://dev.custos.usecustos.org/apiserver/identity-management/v1.0.0/</url>
        <client_id> ... </client_id>
        <client_secret> ... </client_secret>
        <redirect_uri>http://localhost:8080/authnz/custos/callback</redirect_uri>
        <!-- (Optional): whether to show a create account confirmation page.  This defaults to True for Custos -->
        <!-- <require_create_confirmation>true</require_create_confirmation> -->
        <!-- (Optional) Trusted CA certificate file or directory to use when verify Custos authorization server.
             See http://docs.python-requests.org/en/master/user/advanced/#ssl-cert-verification for more information. -->
        <!-- <ca_bundle>/path/to/ca_bundle</ca_bundle> -->
        <!-- (Optional) Override the default Custos well-known URL to point to a different instance -->
        <!-- <well_known_oidc_config_uri>https://.../.well-known/openid-configuration</well_known_oidc_config_uri> -->
        <!-- (Optional) Restrict the list of options available for login using CILogon or Custos by including the EntityID for each institution
             in a separate <allowed_idp> tag. Find the EntityID(s) for your desired institution(s) at https://cilogon.org/idplist/
             Note: the <allowed_idp>'s for Custos should match those for CILogon if both are enabled.-->
        <!-- <allowed_idp>https://github.com/login/oauth/authorize</allowed_idp> -->
        <!-- (Optional) Enable logging out of the IDP when user logs out of Galaxy -->
        <!-- <enable_idp_logout>false</enable_idp_logout> -->
    </provider>

    <provider name="CILogon">
        <url>https://cilogon.org/authorize</url>
        <client_id> ... </client_id>
        <client_secret> ... </client_secret>
        <redirect_uri>http://localhost:8080/authnz/cilogon/callback</redirect_uri>
        <!-- (Optional) Trusted CA certificate file or directory to use when verify Custos authorization server.
             See http://docs.python-requests.org/en/master/user/advanced/#ssl-cert-verification for more information. -->
        <!-- <ca_bundle>/path/to/ca_bundle</ca_bundle> -->
        <!-- (Optional) Override the default Custos well-known URL to point to a different instance -->
        <!-- <well_known_oidc_config_uri>https://.../.well-known/openid-configuration</well_known_oidc_config_uri> -->
        <!-- (Optional) Restrict the list of options available for login using CILogon or Custos by including the EntityID for each institution
             in a separate <allowed_idp> tag. Find the EntityID(s) for your desired institution(s) at https://cilogon.org/idplist/
             Note: the <allowed_idp>'s for CILogon should match those for Custos if both are enabled.-->
        <!-- <allowed_idp>https://github.com/login/oauth/authorize</allowed_idp> -->
        <!-- (Optional) Enable logging out of the IDP when user logs out of Galaxy -->
        <!-- <enable_idp_logout>false</enable_idp_logout> -->
    </provider>

    <provider name="Keycloak">
        <!-- The URL should include the base keycloak path as well as the realm -->
        <url>https://keycloak.example.org/realms/master/</url>
        <client_id> ... </client_id>
        <client_secret> ... </client_secret>
        <redirect_uri>http://localhost:8080/authnz/keycloak/callback</redirect_uri>
        <!-- (Optional): a provider label to display in the UI -->
        <!-- <label>My provider name</label> -->
        <!-- (Optional): whether to show a create account confirmation page -->
        <!-- <require_create_confirmation>false</require_create_confirmation> -->
        <!-- (Optional) Trusted CA certificate file or directory to use when verify Custos authorization server.
             See http://docs.python-requests.org/en/master/user/advanced/#ssl-cert-verification for more information. -->
        <!-- <ca_bundle>/path/to/ca_bundle</ca_bundle> -->
        <!-- (Optional) Override the default Custos well-known URL to point to a different instance -->
        <!-- <well_known_oidc_config_uri>https://.../.well-known/openid-configuration</well_known_oidc_config_uri> -->
        <!-- (Optional) Override the default idp hint -->
        <!-- <idphint>cilogon</idphint> -->
        <!-- (Optional) Enable logging out of the IDP when user logs out of Galaxy -->
        <!-- <enable_idp_logout>false</enable_idp_logout> -->
        <!-- <icon>https://path/to/icon</icon>  -->
        <!-- (Optional) Enable PKCE for this IDP -->
        <!-- <pkce_support>false</pkce_support> -->
        <!-- (Optional) the audiences accepted on the access-token for this IDP. -->
        <!-- <accepted_audiences>galaxy</accepted_audiences> -->

    </provider>

    <!-- Documentation: https://galaxyproject.org/authnz/config/oidc/idps/elixir-aai  -->
    <provider name="Elixir">
        <client_id>...</client_id>
        <client_secret>...</client_secret>
        <redirect_uri>http://localhost:8080/authnz/elixir/callback</redirect_uri>
        <prompt>consent</prompt>
        <icon>https://lifescience-ri.eu/fileadmin/lifescience-ri/media/Images/button-login-small.png</icon>
        <!-- (Optional) Extra scopes you need to request for your implementation -->
        <!-- <extra_scopes>offline_access,something-else</extra_scopes> -->
    </provider>

    <provider name="Okta">
        <client_id> ... </client_id>
        <client_secret> ... </client_secret>
        <redirect_uri>http://localhost:8080/authnz/okta/callback</redirect_uri>
        <!-- Okta API URL, based on 'Single Sign-On to Okta' URL here: https://developer.okta.com/docs/api/resources/oidc#2-okta-as-the-identity-platform-for-your-app-or-api
        This has subsequently had the '/v1/authorize' removed. In productive deployments, this will likely resemble:
        https://${company}.okta.com/oauth2/${authServerId}/

        To get the URL, you have to create an application in Okta. The following settings serve as example as of the time of writing:
        - Page 1 - Platform
          - Platform: Web
        - Page 2 - Settings
          - Name: (Decide yourself)
          - Base URIs: http://localhost:8080/
          - Login redirect URIs: http://localhost:8080/authnz/okta/callback
          - Grant type allowed: Authorization code

        You should subsequently be able to get the client ID and the client secret from the Okta website.
         -->
        <api_url> ... </api_url>
    </provider>

    <provider name="azure">
        <client_id> ... </client_id>
        <client_secret> ... </client_secret>
        <redirect_uri>http://localhost:8080/authnz/azure/callback</redirect_uri>
        <!-- Azure client_id, client_secret, and tenant_id can be obtained by folowing the instructions at
        https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app

        The required API URL will be automatically constructed from the provided tenant_id. In previous Galaxy versions
         the entire "api_url" had to be provided including the tenant ID, this is no longer a valid configuration option.
         -->
        <tenant_id> ... </tenant_id>
    </provider>

    <!-- Documentation: https://docs.egi.eu/providers/check-in/sp -->
    <provider name="egi_checkin">
	<!-- Client id and secret can be obtained by registering your client at EGI Check-in
	Federation Registry: https://aai.egi.eu/federation -->
        <client_id>...</client_id>
        <client_secret>...</client_secret>
	<redirect_uri>http://localhost:8080/authnz/checkin/callback</redirect_uri>
	<icon>https://im.egi.eu/im-dashboard/static/images/egicheckin.png</icon>
        <prompt>consent</prompt>
	<!-- (Optional) Which Check-in environment to use (prod, demo, dev), default is prod -->
	<!-- <checkin_env>dev</checkin_env> -->
    </provider>


</OIDC>
