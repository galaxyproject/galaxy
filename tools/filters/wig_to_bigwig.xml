<tool id="wig_to_bigWig" name="Wig/BedGraph-to-bigWig" version="1.1.1" hidden="true">
  <description>converter</description>
  <requirements>
    <requirement type="package" version="357">ucsc-wigtobigwig</requirement>
  </requirements>
  <stdio>
      <!-- Anything other than zero is an error -->
      <regex match="needLargeMem: trying to allocate 0 bytes"
          description="Your input file might be empty or wrongly formatted"/>
      <regex match="^Error"/>
  </stdio>
  <command>
      <![CDATA[
      grep -v "^track" '$input1' | wigToBigWig stdin '$chromInfo' '$out_file1'
    #if $settings.settingsType == "full":
      -blockSize=${settings.blockSize} -itemsPerSlot=${settings.itemsPerSlot} ${settings.clip} ${settings.unc}
    #else:
      -clip
    #end if
    2>&1 || echo "Error running wigToBigWig." >&2
    ]]>
  </command>
  <inputs>
    <param format="wig,bedgraph" name="input1" type="data" label="Convert">
      <validator type="unspecified_build" />
    </param>
    <conditional name="settings">
      <param name="settingsType" type="select" label="Converter settings to use" help="Default settings should usually be used.">
        <option value="preset">Default</option>
        <option value="full">Full parameter list</option>
      </param>
      <when value="preset" />
      <when value="full">
        <param name="blockSize" type="integer" value="256" label="Items to bundle in r-tree" help="Default is 256 (blockSize)" />
        <param name="itemsPerSlot" type="integer" value="1024" label="Data points bundled at lowest level" help="Default is 1024 (itemsPerSlot)" />
        <param name="clip" type="boolean" truevalue="-clip" falsevalue="" checked="True" label="Clip chromosome positions" help="Issue warning messages rather than dying if wig file contains items off end of chromosome. (clip)"/>
        <param name="unc" type="boolean" truevalue="-unc" falsevalue="" checked="False" label="Do not use compression" help="(unc)"/>
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data format="bigwig" name="out_file1" />
  </outputs>
  <tests>
    <test>
      <param name="input1" value="2.wig" dbkey="hg17" />
      <param name="settingsType" value="full" />
      <param name="blockSize" value="256" />
      <param name="itemsPerSlot" value="1024" />
      <param name="clip" value="True" />
      <param name="unc" value="False" />
      <output name="out_file1" file="2.bigwig"/>
    </test>
    <test>
      <param name="input1" value="2.wig" dbkey="hg17" />
      <param name="settingsType" value="preset" />
      <output name="out_file1" file="2.bigwig"/>
    </test>
    <test>
      <param name="input1" value="1.bedgraph" dbkey="hg17" ftype="bedgraph"/>
      <param name="settingsType" value="preset" />
      <output name="out_file1" file="3.bigwig" compare="sim_size"/>
    </test>
  </tests>
  <help>
**Syntax**

This tool converts bedgraph or wiggle data into bigWig type.

- **Wiggle format**: The .wig format is line-oriented. Wiggle data is preceded by a UCSC track definition line.  Following the track definition line is the track data, which can be entered in three different formats described below.

  - **BED format** with no declaration line and four columns of data::

      chromA  chromStartA  chromEndA  dataValueA
      chromB  chromStartB  chromEndB  dataValueB

  - **variableStep** two column data; started by a declaration line and followed with chromosome positions and data values::

      variableStep  chrom=chrN  [span=windowSize]
      chromStartA  dataValueA
      chromStartB  dataValueB

  - **fixedStep** single column data; started by a declaration line and followed with data values::

      fixedStep  chrom=chrN  start=position  step=stepInterval  [span=windowSize]
      dataValue1
      dataValue2

- The **BedGraph format** is described in detail at the `UCSC Bioinformatics website`_

.. _UCSC Bioinformatics website: http://genome.ucsc.edu/goldenPath/help/bedgraph.html

</help>
</tool>
