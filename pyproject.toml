[project]
name = "galaxy"
version = "0.1.0"  # Not the real version, which is instead defined in lib/galaxy/version.py
description = "Galaxy is an open, web-based platform for accessible, reproducible, and transparent computational research."
authors = [
    {name = "Galaxy Contributors"},
]
maintainers = [
    {name = "Galaxy Committers", email = "galaxy-committers@lists.galaxyproject.org"}
]
license = {file = "LICENSE.txt"}
readme = "README.rst"
requires-python = ">=3.8"
dependencies = [
    "a2wsgi",
    "aiofiles",
    "alembic",
    "apispec",
    "Babel",
    "bdbag>=1.6.3",
    "Beaker",
    "bioblend",
    "bleach",
    "boltons",
    "boto",
    "bx-python",
    "celery",
    "cloudauthz==0.6.0",
    "cloudbridge",
    "circus",
    "conda-package-streaming",
    "CT3>=3.3.3",  # Python 3.13 support
    "cwl-utils>=0.13",
    "cwltool>=3.1.20230624081518",  # save time, minimum needed by cwl-1.0 branch
    "dictobj",
    "dnspython",
    "docutils!=0.17,!=0.17.1",
    "dparse",
    "edam-ontology",
    "fastapi-slim>=0.111.0",
    "fissix ; python_version>='3.13'",
    "fs",
    "future>=1.0.0",  # Python 3.12 support
    "graphene",
    "graphene-sqlalchemy>=3.0.0rc1",  # need a beta release to be compat. with starlette plugin
    "graphql-core",
    "gravity>=1.0.4",
    "gunicorn",
    "gxformat2",
    "h5grove>=1.2.1",
    "h5py",  # Python 3.8 support
    "h5py>=3.12 ; python_version>='3.9'",  # Python 3.13 support
    "importlib-resources ; python_version<'3.12'",  # for importlib.{abc.Traversable,resources.{files, Package}}
    "isa-rwval @ git+https://github.com/nsoranzo/isa-rwval.git@master",  # https://github.com/ISA-tools/isa-rwval/pull/17
    "isal>=1.7.0",  # Python 3.13 support
    "jinja2",
    "kombu>=5.3",  # for importlib-metadata fix
    "lagom",
    "Mako",
    "Markdown",
    "MarkupSafe",
    "mercurial>=6.8.2",  # Python 3.13 support
    "mrcfile",
    "msal",
    "nodeenv",
    "numpy",
    "numpy>=1.26.0 ; python_version=='3.9'",  # Python 3.12 support
    "numpy>=2.1.0 ; python_version>='3.10'",  # Python 3.13 support
    "packaging",
    "paramiko!=2.9.0,!=2.9.1",  # https://github.com/paramiko/paramiko/issues/1961
    "Parsley",
    "Paste",
    "pebble",
    "pillow",
    "psutil",
    "pulsar-galaxy-lib>=0.15.0.dev0",
    "pycryptodome",
    "pydantic[email]>=2.7.4",  # https://github.com/pydantic/pydantic/pull/9639
    "PyJWT",
    "pykwalify",
    "pylibmagic",
    "pyparsing",
    "pysam>=0.21",  # for Python 3.11 support on macOS
    "python-dateutil",
    "python-magic",
    "python-multipart",  # required to support form parsing in FastAPI/Starlette
    "python-slugify",
    "PyYAML",
    "refgenconf>=0.12.0",
    "regex",
    "requests",
    "rocrate",
    "Routes",
    "s3fs>=2023.1.0",
    "schema-salad>=8.7.20240905150001",  # Python 3.13 support
    "social-auth-core>=4.5.0",  # to drop dependency on abandoned python-jose
    "sortedcontainers",
    "SQLAlchemy>=2.0,<2.1,!=2.0.36",  # https://github.com/sqlalchemy/sqlalchemy/issues/12019,
    "sqlitedict",
    "sqlparse",
    "starlette",
    "starlette-context",
    "starlette-graphene3",
    "svgwrite",
    "tifffile",
    "tuswsgi",
    "typing-extensions",
    "uvicorn!=0.28.0",  # https://github.com/galaxyproject/galaxy/issues/17669
    "uvloop>=0.21.0",  # Python 3.13 support
    "WebOb>=1.8.9",  # Python 3.13 support
    "Whoosh",
    "zipstream-new",
]

[project.urls]
Homepage = "https://galaxyproject.org/"
Documentation = "https://docs.galaxyproject.org/"
Repository = "https://github.com/galaxyproject/galaxy"
"Bug Tracker" = "https://github.com/galaxyproject/galaxy/issues"

[dependency-groups]
dev = [
    "ase>=3.18.1",
    "axe-selenium-python",
    "black",
    "boto3",
    "codespell",
    "cwltest>=2.5.20240906231108",  # Python 3.13 support
    "darker",
    "fluent-logger",
    "galaxy-release-util",
    "httpx",
    "isort",
    "lxml!=4.2.2",
    "markdown-it-reporter",
    "myst-parser",
    "onedatafilerestclient==21.2.5.2",
    "pkce",
    "playwright>=1.48.0",  # Python 3.13 support
    "pytest<8",  # https://github.com/galaxyproject/galaxy/issues/17561
    "pytest-asyncio",
    "pytest-cov",
    "pytest-html",
    "pytest-httpserver",
    "python-irodsclient!=1.1.2",  # https://github.com/irods/python-irodsclient/issues/356
    "pytest-json-report",
    "pytest-mock",
    "pytest-playwright",
    "pytest-postgresql!=3.0.0",  # https://github.com/ClearcodeHQ/pytest-postgresql/issues/426
    "pytest-shard",
    "responses",
    "rucio-clients>=33.6.0 ; python_version>='3.9'",  # https://github.com/galaxyproject/galaxy/pull/17156
    "selenium",
    "seletools",
    "Sphinx>=4.0",  # support docutils 0.17
    "sphinx-rtd-theme",
    "statsd",
    "testfixtures",
    "tuspy",
    "twill>=3.2.5",  # Python 3.13 support
    "watchdog",
    "Werkzeug",
]
typecheck = [
    "boto3-stubs[s3]",
    "lxml-stubs",
    "mypy",
    "pydantic>=2.7.4",  # for pydantic.mypy plugin
    "types-bleach",
    "types-boto",
    "types-contextvars",
    "types-dataclasses",
    "types-docutils",
    "types-Markdown",
    "types-paramiko",
    "types-python-dateutil",
    "types-python-slugify",
    "types-PyYAML",
    "types-requests",
    "types-setuptools",
    "types-six",
]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
^/(
  | packages
  | lib/tool_shed/test/test_data/repos
)/
'''

[tool.darker]
isort = true

[tool.ruff]
target-version = "py38"
exclude = [
    "lib/tool_shed/test/test_data/repos"
]

[tool.ruff.lint]
# Enable: pycodestyle errors (E), Pyflakes (F), flake8-bugbear (B),
# flake8-comprehensions (C4), flake8-logging-format (G),
# flake8-implicit-str-concat (ISC) and pyupgrade (UP)
select = ["E", "F", "B", "C4", "G", "ISC", "NPY", "UP"]
# Exceptions:
# B008 Do not perform function calls in argument defaults (for FastAPI Depends and Body)
# B9 flake8-bugbear opinionated warnings
# E402 module level import not at top of file # TODO, we would like to improve this.
# E501 is line length (delegated to black)
# G* are TODOs
ignore = ["B008", "B9", "E402", "E501", "G001", "G002", "G004"]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.isort]
# We are not selecting "I" rules in ruff yet because support for all the isort
# options we need is not complete, but these are the one currently implemented.
combine-as-imports = true
relative-imports-order = "closest-to-furthest"

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.per-file-ignores]
# Don't check pyupgrade rules on tool scripts, which may use different Python versions
"test/functional/tools/*" = ["UP"]
"tools/*" = ["UP"]
# Don't check some pyupgrade rules on generated files
"lib/galaxy/schema/bco/*" = ["UP006", "UP007"]
"lib/galaxy/schema/drs/*" = ["UP006", "UP007"]
"lib/tool_shed_client/schema/trs.py" = ["UP006", "UP007"]
"lib/tool_shed_client/schema/trs_service_info.py" = ["UP006", "UP007"]

[tool.uv]
constraint-dependencies = [
    "scipy>=1.14.1; python_version>='3.10'",  # Python 3.13 support
]
default-groups = []
extra-index-url = ["https://wheels.galaxyproject.org/simple"]
index-strategy = "unsafe-best-match"
package = false
