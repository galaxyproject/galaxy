{"$defs": {"BaseUrlParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_baseurl", "default": "gx_baseurl", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "baseurl", "title": "type", "type": "string"}}, "required": ["name", "type"], "title": "BaseUrlParameterModel", "type": "object"}, "BooleanParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_boolean", "default": "gx_boolean", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "boolean", "title": "type", "type": "string"}, "value": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "default": false, "title": "value"}, "truevalue": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "truevalue"}, "falsevalue": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "falsevalue"}}, "required": ["name", "type"], "title": "BooleanParameterModel", "type": "object"}, "Citation": {"properties": {"type": {"title": "type", "type": "string"}, "content": {"title": "content", "type": "string"}}, "required": ["type", "content"], "title": "Citation", "type": "object"}, "ColorParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_color", "default": "gx_color", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "color", "title": "type", "type": "string"}, "value": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "value"}}, "required": ["name", "type"], "title": "ColorParameterModel", "type": "object"}, "ConditionalParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_conditional", "default": "gx_conditional", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "conditional", "title": "type", "type": "string"}, "test_parameter": {"anyOf": [{"$ref": "#/$defs/BooleanParameterModel"}, {"$ref": "#/$defs/SelectParameterModel"}], "title": "test_parameter"}, "whens": {"items": {"$ref": "#/$defs/ConditionalWhen"}, "title": "whens", "type": "array"}}, "required": ["name", "type", "test_parameter", "whens"], "title": "ConditionalParameterModel", "type": "object"}, "ConditionalWhen": {"additionalProperties": false, "properties": {"discriminator": {"anyOf": [{"type": "boolean"}, {"type": "string"}], "title": "Discriminator"}, "parameters": {"items": {"anyOf": [{"$ref": "#/$defs/CwlIntegerParameterModel"}, {"$ref": "#/$defs/CwlFloatParameterModel"}, {"$ref": "#/$defs/CwlStringParameterModel"}, {"$ref": "#/$defs/CwlBooleanParameterModel"}, {"$ref": "#/$defs/CwlNullParameterModel"}, {"$ref": "#/$defs/CwlFileParameterModel"}, {"$ref": "#/$defs/CwlDirectoryParameterModel"}, {"$ref": "#/$defs/CwlUnionParameterModel"}, {"$ref": "#/$defs/TextParameterModel"}, {"$ref": "#/$defs/IntegerParameterModel"}, {"$ref": "#/$defs/FloatParameterModel"}, {"$ref": "#/$defs/BooleanParameterModel"}, {"$ref": "#/$defs/HiddenParameterModel"}, {"$ref": "#/$defs/SelectParameterModel"}, {"$ref": "#/$defs/DataParameterModel"}, {"$ref": "#/$defs/DataCollectionParameterModel"}, {"$ref": "#/$defs/DataColumnParameterModel"}, {"$ref": "#/$defs/DirectoryUriParameterModel"}, {"$ref": "#/$defs/RulesParameterModel"}, {"$ref": "#/$defs/DrillDownParameterModel"}, {"$ref": "#/$defs/GroupTagParameterModel"}, {"$ref": "#/$defs/BaseUrlParameterModel"}, {"$ref": "#/$defs/GenomeBuildParameterModel"}, {"$ref": "#/$defs/ColorParameterModel"}, {"$ref": "#/$defs/ConditionalParameterModel"}, {"$ref": "#/$defs/RepeatParameterModel"}, {"$ref": "#/$defs/SectionParameterModel"}]}, "title": "Parameters", "type": "array"}, "is_default_when": {"title": "Is Default When", "type": "boolean"}}, "required": ["discriminator", "parameters", "is_default_when"], "title": "ConditionalWhen", "type": "object"}, "Container": {"properties": {"type": {"enum": ["docker", "singularity"], "title": "type", "type": "string"}, "container_id": {"title": "container_id", "type": "string"}}, "required": ["type", "container_id"], "title": "Container", "type": "object"}, "ContainerRequirement": {"properties": {"type": {"const": "container", "title": "type", "type": "string"}, "container": {"$ref": "#/$defs/Container", "title": "container"}}, "required": ["type", "container"], "title": "ContainerRequirement", "type": "object"}, "CwlBooleanParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "cwl_boolean", "default": "cwl_boolean", "title": "parameter_type", "type": "string"}}, "required": ["name"], "title": "CwlBooleanParameterModel", "type": "object"}, "CwlDirectoryParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "cwl_directory", "default": "cwl_directory", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}}, "required": ["name"], "title": "CwlDirectoryParameterModel", "type": "object"}, "CwlFileParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "cwl_file", "default": "cwl_file", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}}, "required": ["name"], "title": "CwlFileParameterModel", "type": "object"}, "CwlFloatParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "cwl_float", "default": "cwl_float", "title": "parameter_type", "type": "string"}}, "required": ["name"], "title": "CwlFloatParameterModel", "type": "object"}, "CwlIntegerParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "cwl_integer", "default": "cwl_integer", "title": "parameter_type", "type": "string"}}, "required": ["name"], "title": "CwlIntegerParameterModel", "type": "object"}, "CwlNullParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "cwl_null", "default": "cwl_null", "title": "parameter_type", "type": "string"}}, "required": ["name"], "title": "CwlNullParameterModel", "type": "object"}, "CwlStringParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "cwl_string", "default": "cwl_string", "title": "parameter_type", "type": "string"}}, "required": ["name"], "title": "CwlStringParameterModel", "type": "object"}, "CwlUnionParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "cwl_union", "default": "cwl_union", "title": "parameter_type", "type": "string"}, "parameters": {"items": {"anyOf": [{"$ref": "#/$defs/CwlIntegerParameterModel"}, {"$ref": "#/$defs/CwlFloatParameterModel"}, {"$ref": "#/$defs/CwlStringParameterModel"}, {"$ref": "#/$defs/CwlBooleanParameterModel"}, {"$ref": "#/$defs/CwlNullParameterModel"}, {"$ref": "#/$defs/CwlFileParameterModel"}, {"$ref": "#/$defs/CwlDirectoryParameterModel"}, {"$ref": "#/$defs/CwlUnionParameterModel"}]}, "title": "parameters", "type": "array"}}, "required": ["name", "parameters"], "title": "CwlUnionParameterModel", "type": "object"}, "DataCollectionParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_data_collection", "default": "gx_data_collection", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "data_collection", "title": "type", "type": "string"}, "collection_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "collection_type"}, "extensions": {"default": ["data"], "items": {"type": "string"}, "title": "extensions", "type": "array"}, "value": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "value"}}, "required": ["name", "type", "value"], "title": "DataCollectionParameterModel", "type": "object"}, "DataColumnParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_data_column", "default": "gx_data_column", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "data_column", "title": "type", "type": "string"}, "multiple": {"title": "multiple", "type": "boolean"}, "value": {"anyOf": [{"type": "integer"}, {"items": {"type": "integer"}, "type": "array"}, {"type": "null"}], "default": null, "title": "value"}}, "required": ["name", "type", "multiple"], "title": "DataColumnParameterModel", "type": "object"}, "DataParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_data", "default": "gx_data", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "data", "title": "type", "type": "string"}, "extensions": {"default": ["data"], "description": "Limit inputs to datasets with these extensions. Use 'data' to allow all input datasets.", "examples": ["txt", "tabular", "tiff"], "items": {"type": "string"}, "title": "extensions", "type": "array"}, "multiple": {"default": false, "description": "Allow multiple values to be selected.", "title": "multiple", "type": "boolean"}, "min": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": null, "title": "min"}, "max": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": null, "title": "max"}}, "required": ["name", "type"], "title": "DataParameterModel", "type": "object"}, "DirectoryUriParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_directory_uri", "default": "gx_directory_uri", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "directory", "title": "type", "type": "string"}, "validators": {"default": [], "items": {"anyOf": [{"$ref": "#/$defs/LengthParameterValidatorModel"}, {"$ref": "#/$defs/RegexParameterValidatorModel"}, {"$ref": "#/$defs/ExpressionParameterValidatorModel"}, {"$ref": "#/$defs/EmptyFieldParameterValidatorModel"}]}, "title": "validators", "type": "array"}}, "required": ["name", "type"], "title": "DirectoryUriParameterModel", "type": "object"}, "DrillDownOptionsDict": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "name"}, "value": {"title": "value", "type": "string"}, "options": {"items": {"$ref": "#/$defs/DrillDownOptionsDict"}, "title": "options", "type": "array"}, "selected": {"title": "selected", "type": "boolean"}}, "required": ["name", "value", "options", "selected"], "title": "DrillDownOptionsDict", "type": "object"}, "DrillDownParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_drill_down", "default": "gx_drill_down", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "drill_down", "title": "type", "type": "string"}, "options": {"anyOf": [{"items": {"$ref": "#/$defs/DrillDownOptionsDict"}, "type": "array"}, {"type": "null"}], "default": null, "title": "options"}, "multiple": {"title": "multiple", "type": "boolean"}, "hierarchy": {"enum": ["recurse", "exact"], "title": "hierarchy", "type": "string"}}, "required": ["name", "type", "multiple", "hierarchy"], "title": "DrillDownParameterModel", "type": "object"}, "EmptyFieldParameterValidatorModel": {"additionalProperties": false, "properties": {"type": {"const": "empty_field", "default": "empty_field", "title": "Type", "type": "string"}, "message": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Message"}, "implicit": {"default": false, "title": "Implicit", "type": "boolean"}, "negate": {"default": false, "title": "Negate", "type": "boolean"}}, "title": "EmptyFieldParameterValidatorModel", "type": "object"}, "ExpressionParameterValidatorModel": {"additionalProperties": false, "description": "Check if a one line python expression given expression evaluates to True.\n\nThe expression is given is the content of the validator tag.", "properties": {"type": {"const": "expression", "default": "expression", "title": "Type", "type": "string"}, "message": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Message"}, "implicit": {"default": false, "title": "Implicit", "type": "boolean"}, "negate": {"default": false, "title": "Negate", "type": "boolean"}, "expression": {"title": "Expression", "type": "string"}}, "required": ["expression"], "title": "ExpressionParameterValidatorModel", "type": "object"}, "FilePatternDatasetCollectionDescription": {"properties": {"discover_via": {"const": "pattern", "title": "discover_via", "type": "string"}, "format": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "format"}, "visible": {"title": "visible", "type": "boolean"}, "assign_primary_output": {"title": "assign_primary_output", "type": "boolean"}, "directory": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "directory"}, "recurse": {"title": "recurse", "type": "boolean"}, "match_relative_path": {"title": "match_relative_path", "type": "boolean"}, "sort_key": {"enum": ["filename", "name", "designation", "dbkey"], "title": "sort_key", "type": "string"}, "sort_comp": {"enum": ["lexical", "numeric"], "title": "sort_comp", "type": "string"}, "sort_reverse": {"default": false, "title": "sort_reverse", "type": "boolean"}, "pattern": {"title": "pattern", "type": "string"}}, "required": ["discover_via", "format", "visible", "assign_primary_output", "directory", "recurse", "match_relative_path", "sort_key", "sort_comp", "pattern"], "title": "FilePatternDatasetCollectionDescription", "type": "object"}, "FloatParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_float", "default": "gx_float", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "float", "title": "type", "type": "string"}, "value": {"anyOf": [{"type": "number"}, {"type": "null"}], "default": null, "title": "value"}, "min": {"anyOf": [{"type": "number"}, {"type": "null"}], "default": null, "title": "min"}, "max": {"anyOf": [{"type": "number"}, {"type": "null"}], "default": null, "title": "max"}, "validators": {"default": [], "items": {"$ref": "#/$defs/InRangeParameterValidatorModel"}, "title": "validators", "type": "array"}}, "required": ["name", "type"], "title": "FloatParameterModel", "type": "object"}, "GalaxyToolParameterModel": {"discriminator": {"mapping": {"baseurl": "#/$defs/BaseUrlParameterModel", "boolean": "#/$defs/BooleanParameterModel", "color": "#/$defs/ColorParameterModel", "conditional": "#/$defs/ConditionalParameterModel", "data": "#/$defs/DataParameterModel", "data_collection": "#/$defs/DataCollectionParameterModel", "data_column": "#/$defs/DataColumnParameterModel", "directory": "#/$defs/DirectoryUriParameterModel", "drill_down": "#/$defs/DrillDownParameterModel", "float": "#/$defs/FloatParameterModel", "genomebuild": "#/$defs/GenomeBuildParameterModel", "group_tag": "#/$defs/GroupTagParameterModel", "hidden": "#/$defs/HiddenParameterModel", "integer": "#/$defs/IntegerParameterModel", "repeat": "#/$defs/RepeatParameterModel", "rules": "#/$defs/RulesParameterModel", "section": "#/$defs/SectionParameterModel", "select": "#/$defs/SelectParameterModel", "text": "#/$defs/TextParameterModel"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/TextParameterModel"}, {"$ref": "#/$defs/IntegerParameterModel"}, {"$ref": "#/$defs/FloatParameterModel"}, {"$ref": "#/$defs/BooleanParameterModel"}, {"$ref": "#/$defs/HiddenParameterModel"}, {"$ref": "#/$defs/SelectParameterModel"}, {"$ref": "#/$defs/DataParameterModel"}, {"$ref": "#/$defs/DataCollectionParameterModel"}, {"$ref": "#/$defs/DataColumnParameterModel"}, {"$ref": "#/$defs/DirectoryUriParameterModel"}, {"$ref": "#/$defs/RulesParameterModel"}, {"$ref": "#/$defs/DrillDownParameterModel"}, {"$ref": "#/$defs/GroupTagParameterModel"}, {"$ref": "#/$defs/BaseUrlParameterModel"}, {"$ref": "#/$defs/GenomeBuildParameterModel"}, {"$ref": "#/$defs/ColorParameterModel"}, {"$ref": "#/$defs/ConditionalParameterModel"}, {"$ref": "#/$defs/RepeatParameterModel"}, {"$ref": "#/$defs/SectionParameterModel"}], "title": "GalaxyToolParameterModel"}, "GenomeBuildParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_genomebuild", "default": "gx_genomebuild", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "genomebuild", "title": "type", "type": "string"}, "multiple": {"title": "multiple", "type": "boolean"}}, "required": ["name", "type", "multiple"], "title": "GenomeBuildParameterModel", "type": "object"}, "GroupTagParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_group_tag", "default": "gx_group_tag", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "group_tag", "title": "type", "type": "string"}, "multiple": {"title": "multiple", "type": "boolean"}}, "required": ["name", "type", "multiple"], "title": "GroupTagParameterModel", "type": "object"}, "HelpContent": {"properties": {"format": {"enum": ["restructuredtext", "plain_text", "markdown"], "title": "format", "type": "string"}, "content": {"title": "content", "type": "string"}}, "required": ["format", "content"], "title": "HelpContent", "type": "object"}, "HiddenParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_hidden", "default": "gx_hidden", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "hidden", "title": "type", "type": "string"}, "value": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "value"}, "validators": {"default": [], "items": {"anyOf": [{"$ref": "#/$defs/LengthParameterValidatorModel"}, {"$ref": "#/$defs/RegexParameterValidatorModel"}, {"$ref": "#/$defs/ExpressionParameterValidatorModel"}, {"$ref": "#/$defs/EmptyFieldParameterValidatorModel"}]}, "title": "validators", "type": "array"}}, "required": ["name", "type", "value"], "title": "HiddenParameterModel", "type": "object"}, "InRangeParameterValidatorModel": {"additionalProperties": false, "properties": {"type": {"const": "in_range", "default": "in_range", "title": "Type", "type": "string"}, "message": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Message"}, "implicit": {"default": false, "title": "Implicit", "type": "boolean"}, "min": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "default": null, "title": "Min"}, "max": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "default": null, "title": "Max"}, "exclude_min": {"default": false, "title": "Exclude Min", "type": "boolean"}, "exclude_max": {"default": false, "title": "Exclude Max", "type": "boolean"}, "negate": {"default": false, "title": "Negate", "type": "boolean"}}, "title": "InRangeParameterValidatorModel", "type": "object"}, "IncomingToolOutputCollection": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Parameter name. Used when referencing parameter in workflows.", "title": "name"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Output label. Will be used as dataset name in history.", "title": "label"}, "hidden": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "default": null, "description": "If true, the output will not be shown in the history.", "title": "hidden"}, "type": {"const": "collection", "title": "type", "type": "string"}, "structure": {"$ref": "#/$defs/ToolOutputCollectionStructure", "title": "structure"}}, "required": ["type", "structure"], "title": "IncomingToolOutputCollection", "type": "object"}, "IncomingToolOutputDataset": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Parameter name. Used when referencing parameter in workflows.", "title": "name"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Output label. Will be used as dataset name in history.", "title": "label"}, "hidden": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "default": null, "description": "If true, the output will not be shown in the history.", "title": "hidden"}, "type": {"const": "data", "title": "type", "type": "string"}, "format": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "The short name for the output datatype.", "title": "format"}, "format_source": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "This sets the data type of the output dataset(s) to be the same format as that of the specified tool input.", "title": "format_source"}, "metadata_source": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "This copies the metadata information from the tool\u2019s input dataset to serve as default for information that cannot be detected from the output. One prominent use case is interval data with a non-standard column order that cannot be deduced from a header line, but which is known to be identical in the input and output datasets.", "title": "metadata_source"}, "discover_datasets": {"anyOf": [{"items": {"anyOf": [{"$ref": "#/$defs/FilePatternDatasetCollectionDescription"}, {"$ref": "#/$defs/ToolProvidedMetadataDatasetCollection"}]}, "type": "array"}, {"type": "null"}], "default": null, "title": "discover_datasets"}, "from_work_dir": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Relative path to a file produced by the tool in its working directory. Output\u2019s contents are set to this file\u2019s contents.", "title": "from_work_dir"}, "precreate_directory": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "default": false, "title": "precreate_directory"}}, "required": ["type"], "title": "IncomingToolOutputDataset", "type": "object"}, "IntegerParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_integer", "default": "gx_integer", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "title": "optional", "type": "boolean"}, "type": {"const": "integer", "title": "type", "type": "string"}, "value": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": null, "title": "value"}, "min": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": null, "title": "min"}, "max": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": null, "title": "max"}, "validators": {"default": [], "items": {"$ref": "#/$defs/InRangeParameterValidatorModel"}, "title": "validators", "type": "array"}}, "required": ["name", "type"], "title": "IntegerParameterModel", "type": "object"}, "JavascriptRequirement": {"properties": {"type": {"const": "javascript", "title": "type", "type": "string"}, "expression_lib": {"anyOf": [{"items": {"description": "Provide Javascript/ECMAScript 5.1 code here that will be available for expressions inside the `shell_command` field.", "examples": ["function pickValue() {\n    if (inputs.conditional_parameter.test_parameter == \"a\") {\n        return inputs.conditional_parameter.integer_parameter\n    } else {\n        return inputs.conditional_parameter.boolean_parameter\n    }\n}"], "title": "expression_lib", "type": "string"}, "type": "array"}, {"type": "null"}], "title": "expression_lib"}}, "required": ["type", "expression_lib"], "title": "JavascriptRequirement", "type": "object"}, "LabelValue": {"properties": {"label": {"title": "Label", "type": "string"}, "value": {"title": "Value", "type": "string"}, "selected": {"title": "Selected", "type": "boolean"}}, "required": ["label", "value", "selected"], "title": "LabelValue", "type": "object"}, "LengthParameterValidatorModel": {"additionalProperties": false, "properties": {"type": {"const": "length", "default": "length", "title": "Type", "type": "string"}, "message": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Message"}, "implicit": {"default": false, "title": "Implicit", "type": "boolean"}, "min": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": null, "title": "Min"}, "max": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": null, "title": "Max"}, "negate": {"default": false, "title": "Negate", "type": "boolean"}}, "title": "LengthParameterValidatorModel", "type": "object"}, "NoOptionsParameterValidatorModel": {"additionalProperties": false, "properties": {"type": {"const": "no_options", "default": "no_options", "title": "Type", "type": "string"}, "message": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Message"}, "implicit": {"default": false, "title": "Implicit", "type": "boolean"}, "negate": {"default": false, "title": "Negate", "type": "boolean"}}, "title": "NoOptionsParameterValidatorModel", "type": "object"}, "RegexParameterValidatorModel": {"additionalProperties": false, "description": "Check if a regular expression **matches** the value, i.e. appears\nat the beginning of the value. To enforce a match of the complete value use\n``$`` at the end of the expression. The expression is given is the content\nof the validator tag. Note that for ``selects`` each option is checked\nseparately.", "properties": {"type": {"const": "regex", "default": "regex", "title": "Type", "type": "string"}, "message": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Message"}, "implicit": {"default": false, "title": "Implicit", "type": "boolean"}, "negate": {"default": false, "title": "Negate", "type": "boolean"}, "expression": {"title": "Expression", "type": "string"}}, "required": ["expression"], "title": "RegexParameterValidatorModel", "type": "object"}, "RepeatParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_repeat", "default": "gx_repeat", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "repeat", "title": "type", "type": "string"}, "parameters": {"items": {"anyOf": [{"$ref": "#/$defs/CwlIntegerParameterModel"}, {"$ref": "#/$defs/CwlFloatParameterModel"}, {"$ref": "#/$defs/CwlStringParameterModel"}, {"$ref": "#/$defs/CwlBooleanParameterModel"}, {"$ref": "#/$defs/CwlNullParameterModel"}, {"$ref": "#/$defs/CwlFileParameterModel"}, {"$ref": "#/$defs/CwlDirectoryParameterModel"}, {"$ref": "#/$defs/CwlUnionParameterModel"}, {"$ref": "#/$defs/TextParameterModel"}, {"$ref": "#/$defs/IntegerParameterModel"}, {"$ref": "#/$defs/FloatParameterModel"}, {"$ref": "#/$defs/BooleanParameterModel"}, {"$ref": "#/$defs/HiddenParameterModel"}, {"$ref": "#/$defs/SelectParameterModel"}, {"$ref": "#/$defs/DataParameterModel"}, {"$ref": "#/$defs/DataCollectionParameterModel"}, {"$ref": "#/$defs/DataColumnParameterModel"}, {"$ref": "#/$defs/DirectoryUriParameterModel"}, {"$ref": "#/$defs/RulesParameterModel"}, {"$ref": "#/$defs/DrillDownParameterModel"}, {"$ref": "#/$defs/GroupTagParameterModel"}, {"$ref": "#/$defs/BaseUrlParameterModel"}, {"$ref": "#/$defs/GenomeBuildParameterModel"}, {"$ref": "#/$defs/ColorParameterModel"}, {"$ref": "#/$defs/ConditionalParameterModel"}, {"$ref": "#/$defs/RepeatParameterModel"}, {"$ref": "#/$defs/SectionParameterModel"}]}, "title": "parameters", "type": "array"}, "min": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": null, "title": "min"}, "max": {"anyOf": [{"type": "integer"}, {"type": "null"}], "default": null, "title": "max"}}, "required": ["name", "type", "parameters"], "title": "RepeatParameterModel", "type": "object"}, "ResourceRequirement": {"properties": {"type": {"const": "resource", "title": "type", "type": "string"}, "cores_min": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "null"}], "default": 1, "description": "Minimum reserved number of CPU cores.\nMay be a fractional value to indicate to a scheduling algorithm that one core can be allocated to multiple jobs. For example, a value of 0.25 indicates that up to 4 jobs may run in parallel on 1 core. A value of 1.25 means that up to 3 jobs can run on a 4 core system (4/1.25 \u2248 3).\nThe reported number of CPU cores reserved for the process is a non-zero integer calculated by rounding up the cores request to the next whole number.\n", "title": "cores_min"}, "cores_max": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "null"}], "default": null, "description": "Maximum reserved number of CPU cores.\nMay be a fractional value to indicate to a scheduling algorithm that one core can be allocated to multiple jobs. For example, a value of 0.25 indicates that up to 4 jobs may run in parallel on 1 core. A value of 1.25 means that up to 3 jobs can run on a 4 core system (4/1.25 \u2248 3).\nThe reported number of CPU cores reserved for the process is a non-zero integer calculated by rounding up the cores request to the next whole number.\n", "title": "cores_max"}, "ram_min": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "null"}], "default": 256, "description": "Minimum reserved RAM in mebibytes (2**20).\nMay be a fractional value. If so, the actual RAM request is rounded up to the next whole number. The reported amount of RAM reserved for the process is a non-zero integer.", "title": "ram_min"}, "ram_max": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"type": "null"}], "default": null, "description": "Maximum reserved RAM in mebibytes (2**20).\nMay be a fractional value. If so, the actual RAM request is rounded up to the next whole number. The reported amount of RAM reserved for the process is a non-zero integer.", "title": "ram_max"}, "tmpdir_min": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "default": null, "title": "tmpdir_min"}, "tmpdir_max": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "default": null, "title": "tmpdir_max"}, "cuda_version_min": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "default": null, "title": "cuda_version_min"}, "cuda_compute_capability": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "default": null, "title": "cuda_compute_capability"}, "gpu_memory_min": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "default": null, "title": "gpu_memory_min"}, "cuda_device_count_min": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "default": null, "title": "cuda_device_count_min"}, "cuda_device_count_max": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "default": null, "title": "cuda_device_count_max"}, "shm_size": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "default": null, "title": "shm_size"}}, "required": ["type"], "title": "ResourceRequirement", "type": "object"}, "RulesParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_rules", "default": "gx_rules", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "rules", "title": "type", "type": "string"}}, "required": ["name", "type"], "title": "RulesParameterModel", "type": "object"}, "SectionParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_section", "default": "gx_section", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "section", "title": "type", "type": "string"}, "parameters": {"items": {"anyOf": [{"$ref": "#/$defs/CwlIntegerParameterModel"}, {"$ref": "#/$defs/CwlFloatParameterModel"}, {"$ref": "#/$defs/CwlStringParameterModel"}, {"$ref": "#/$defs/CwlBooleanParameterModel"}, {"$ref": "#/$defs/CwlNullParameterModel"}, {"$ref": "#/$defs/CwlFileParameterModel"}, {"$ref": "#/$defs/CwlDirectoryParameterModel"}, {"$ref": "#/$defs/CwlUnionParameterModel"}, {"$ref": "#/$defs/TextParameterModel"}, {"$ref": "#/$defs/IntegerParameterModel"}, {"$ref": "#/$defs/FloatParameterModel"}, {"$ref": "#/$defs/BooleanParameterModel"}, {"$ref": "#/$defs/HiddenParameterModel"}, {"$ref": "#/$defs/SelectParameterModel"}, {"$ref": "#/$defs/DataParameterModel"}, {"$ref": "#/$defs/DataCollectionParameterModel"}, {"$ref": "#/$defs/DataColumnParameterModel"}, {"$ref": "#/$defs/DirectoryUriParameterModel"}, {"$ref": "#/$defs/RulesParameterModel"}, {"$ref": "#/$defs/DrillDownParameterModel"}, {"$ref": "#/$defs/GroupTagParameterModel"}, {"$ref": "#/$defs/BaseUrlParameterModel"}, {"$ref": "#/$defs/GenomeBuildParameterModel"}, {"$ref": "#/$defs/ColorParameterModel"}, {"$ref": "#/$defs/ConditionalParameterModel"}, {"$ref": "#/$defs/RepeatParameterModel"}, {"$ref": "#/$defs/SectionParameterModel"}]}, "title": "parameters", "type": "array"}}, "required": ["name", "type", "parameters"], "title": "SectionParameterModel", "type": "object"}, "SelectParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_select", "default": "gx_select", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "select", "title": "type", "type": "string"}, "options": {"anyOf": [{"items": {"$ref": "#/$defs/LabelValue"}, "type": "array"}, {"type": "null"}], "default": null, "title": "options"}, "multiple": {"default": false, "title": "multiple", "type": "boolean"}, "validators": {"default": [], "items": {"$ref": "#/$defs/NoOptionsParameterValidatorModel"}, "title": "validators", "type": "array"}}, "required": ["name", "type"], "title": "SelectParameterModel", "type": "object"}, "TextParameterModel": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows or inside command templating.", "title": "name", "type": "string"}, "parameter_type": {"const": "gx_text", "default": "gx_text", "title": "parameter_type", "type": "string"}, "hidden": {"default": false, "title": "hidden", "type": "boolean"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Will be displayed on the tool page as the label of the parameter.", "title": "label"}, "help": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Short bit of text, rendered on the tool form just below the associated field to provide information about the field.", "title": "help"}, "argument": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "If the parameter reflects just one command line argument of a certain tool, this tag should be set to that particular argument. It is rendered in parenthesis after the help section, and it will create the name attribute (if not given explicitly) from the argument attribute by stripping leading dashes and replacing all remaining dashes by underscores (e.g. if argument=\"--long-parameter\" then name=\"long_parameter\" is implicit).", "title": "argument"}, "is_dynamic": {"default": false, "title": "is_dynamic", "type": "boolean"}, "optional": {"default": false, "description": "If `false`, parameter must have a value.", "title": "optional", "type": "boolean"}, "type": {"const": "text", "title": "type", "type": "string"}, "area": {"default": false, "title": "area", "type": "boolean"}, "value": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "default_value"}, "default_options": {"default": [], "items": {"$ref": "#/$defs/LabelValue"}, "title": "default_options", "type": "array"}, "validators": {"default": [], "items": {"anyOf": [{"$ref": "#/$defs/LengthParameterValidatorModel"}, {"$ref": "#/$defs/RegexParameterValidatorModel"}, {"$ref": "#/$defs/ExpressionParameterValidatorModel"}, {"$ref": "#/$defs/EmptyFieldParameterValidatorModel"}]}, "title": "validators", "type": "array"}}, "required": ["name", "type"], "title": "TextParameterModel", "type": "object"}, "ToolOutputBoolean": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows.", "title": "name"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Output label. Will be used as dataset name in history.", "title": "label"}, "hidden": {"description": "If true, the output will not be shown in the history.", "title": "hidden"}, "type": {"const": "boolean", "title": "type", "type": "string"}}, "required": ["name", "hidden", "type"], "title": "ToolOutputBoolean", "type": "object"}, "ToolOutputCollectionStructure": {"properties": {"collection_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "collection_type"}, "collection_type_source": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "collection_type_source"}, "collection_type_from_rules": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "collection_type_from_rules"}, "structured_like": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "structured_like"}, "discover_datasets": {"anyOf": [{"items": {"anyOf": [{"$ref": "#/$defs/FilePatternDatasetCollectionDescription"}, {"$ref": "#/$defs/ToolProvidedMetadataDatasetCollection"}]}, "type": "array"}, {"type": "null"}], "default": null, "title": "discover_datasets"}}, "title": "ToolOutputCollectionStructure", "type": "object"}, "ToolOutputFloat": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows.", "title": "name"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Output label. Will be used as dataset name in history.", "title": "label"}, "hidden": {"description": "If true, the output will not be shown in the history.", "title": "hidden"}, "type": {"const": "float", "title": "type", "type": "string"}}, "required": ["name", "hidden", "type"], "title": "ToolOutputFloat", "type": "object"}, "ToolOutputInteger": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows.", "title": "name"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Output label. Will be used as dataset name in history.", "title": "label"}, "hidden": {"description": "If true, the output will not be shown in the history.", "title": "hidden"}, "type": {"const": "integer", "title": "type", "type": "string"}}, "required": ["name", "hidden", "type"], "title": "ToolOutputInteger", "type": "object"}, "ToolOutputText": {"properties": {"name": {"description": "Parameter name. Used when referencing parameter in workflows.", "title": "name"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Output label. Will be used as dataset name in history.", "title": "label"}, "hidden": {"description": "If true, the output will not be shown in the history.", "title": "hidden"}, "type": {"const": "text", "title": "type", "type": "string"}}, "required": ["name", "hidden", "type"], "title": "ToolOutputText", "type": "object"}, "ToolProvidedMetadataDatasetCollection": {"properties": {"discover_via": {"const": "tool_provided_metadata", "title": "discover_via", "type": "string"}, "format": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "format"}, "visible": {"title": "visible", "type": "boolean"}, "assign_primary_output": {"title": "assign_primary_output", "type": "boolean"}, "directory": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "directory"}, "recurse": {"title": "recurse", "type": "boolean"}, "match_relative_path": {"title": "match_relative_path", "type": "boolean"}}, "required": ["discover_via", "format", "visible", "assign_primary_output", "directory", "recurse", "match_relative_path"], "title": "ToolProvidedMetadataDatasetCollection", "type": "object"}, "XrefDict": {"properties": {"value": {"title": "value", "type": "string"}, "type": {"title": "type", "type": "string"}}, "required": ["value", "type"], "title": "XrefDict", "type": "object"}, "YamlTemplateConfigFile": {"properties": {"content": {"title": "content", "type": "string"}, "name": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "name"}, "filename": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "filename"}, "eval_engine": {"const": "ecmascript", "default": "ecmascript", "title": "eval_engine", "type": "string"}}, "required": ["content"], "title": "YamlTemplateConfigFile", "type": "object"}}, "properties": {"class": {"const": "GalaxyUserTool", "title": "class_", "type": "string"}, "id": {"description": "Unique identifier for the tool. Should be all lower-case and should not include whitespace.", "examples": ["my-cool-tool"], "maxLength": 255, "minLength": 3, "title": "id", "type": "string"}, "version": {"description": "Version for the tool.", "examples": ["0.1.0"], "title": "version", "type": "string"}, "name": {"description": "The name of the tool, displayed in the tool menu. This is not the same as the tool id, which is a unique identifier for the tool.", "title": "name", "type": "string"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "The description is displayed in the tool menu immediately following the hyperlink for the tool.", "title": "description"}, "configfiles": {"anyOf": [{"items": {"$ref": "#/$defs/YamlTemplateConfigFile"}, "type": "array"}, {"type": "null"}], "default": null, "description": "A list of config files for this tool.", "title": "configfiles"}, "container": {"description": "Container image to use for this tool.", "examples": ["quay.io/biocontainers/python:3.13"], "title": "container", "type": "string"}, "requirements": {"anyOf": [{"items": {"anyOf": [{"$ref": "#/$defs/JavascriptRequirement"}, {"$ref": "#/$defs/ResourceRequirement"}, {"$ref": "#/$defs/ContainerRequirement"}]}, "type": "array"}, {"type": "null"}], "default": [], "description": "A list of requirements needed to execute this tool. These can be javascript expressions, resource requirements or container images.", "title": "requirements"}, "shell_command": {"description": "A string that contains the command to be executed. Parameters can be referenced inside $().", "examples": ["head -n '$(inputs.n_lines)' '$(inputs.data_input.path)'"], "title": "shell_command", "type": "string"}, "inputs": {"default": [], "items": {"$ref": "#/$defs/GalaxyToolParameterModel"}, "title": "inputs", "type": "array"}, "outputs": {"default": [], "items": {"discriminator": {"mapping": {"boolean": "#/$defs/ToolOutputBoolean", "collection": "#/$defs/IncomingToolOutputCollection", "data": "#/$defs/IncomingToolOutputDataset", "float": "#/$defs/ToolOutputFloat", "integer": "#/$defs/ToolOutputInteger", "text": "#/$defs/ToolOutputText"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/IncomingToolOutputDataset"}, {"$ref": "#/$defs/IncomingToolOutputCollection"}, {"$ref": "#/$defs/ToolOutputText"}, {"$ref": "#/$defs/ToolOutputInteger"}, {"$ref": "#/$defs/ToolOutputFloat"}, {"$ref": "#/$defs/ToolOutputBoolean"}]}, "title": "outputs", "type": "array"}, "citations": {"anyOf": [{"items": {"$ref": "#/$defs/Citation"}, "type": "array"}, {"type": "null"}], "default": null, "title": "citations"}, "license": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "A full URI or a a short [SPDX](https://spdx.org/licenses/) identifier for a license for this tool wrapper. The tool wrapper license can be independent of the underlying tool license. This license covers the tool yaml and associated scripts shipped with the tool.", "examples": ["MIT"], "title": "license"}, "edam_operations": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "default": null, "title": "edam_operations"}, "edam_topics": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "default": null, "title": "edam_topics"}, "xrefs": {"anyOf": [{"items": {"$ref": "#/$defs/XrefDict"}, "type": "array"}, {"type": "null"}], "default": null, "title": "xrefs"}, "help": {"anyOf": [{"$ref": "#/$defs/HelpContent"}, {"type": "null"}], "default": null, "description": "Help text shown below the tool interface.", "title": "help"}}, "required": ["class", "id", "version", "name", "container", "shell_command"], "title": "UserToolSource", "type": "object"}