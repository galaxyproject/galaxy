# top_level: {global: <components>, workflows: <components>, histories: <components>}
# components := {<subcomponent_name>: <components>} | <component>
# component := {selectors: <selectors_map>, labels: <labels_map>, ids: <id_map>}
# selectors_map := {<selector_name>: <selector>}
# selector := <str> | {type: <selector_type>, selector: <str>}
# selector_type := css|xpath|sizzle|id
# labels_map := {<label_name>: <label>}

_:  # global stuff

  selectors:
    center_panel: '#center'
    editable_text: '.editable-text'
    tooltip_balloon: '.tooltip'
    tooltip_inner: .tooltip-inner
    left_panel: '#left'
    left_panel_drag: '.flex-panel.left .drag-handle'
    left_panel_collapse: '.collapse-button.left'
    right_panel_drag: '.flex-panel.right .drag-handle'
    right_panel_collapse: '.collapse-button.right'
    by_attribute: '${scope} [${name}="${value}"]'

    confirm_button:
      type: xpath
      selector: '//button[contains(text(), "${name}")]'

  messages:
    selectors:
      all: '[class*="alert"]'
      error: '.alert-danger'
      warning: '.alert-warning'
      done: '.alert-success'
      info: '.alert-info'
      donelarge: '.donemessagelarge'
      infolarge: '.infomessagelarge'
      require_login: 'a.require-login-link'

masthead:

  selectors:
    _: '#masthead'

    help: '#help'
    home: '#analysis'
    login: '#user'
    logout: '.dropdown-menu > li > a > .fa-sign-out-alt'
    logged_in_only: '.loggedin-only'
    logged_out_only: '.loggedout-only'
    preferences: '.dropdown-menu > li > a > .fa-gear'
    register_or_login: '#user.loggedout-only > .nav-link'
    storage_dashboard_link:
      selector: 'storage dashboard link'
      type: data-description
    user: '#user.loggedin-only > a.nav-link > .fa'
    username:
      type: xpath
      selector: '//a[contains(text(), "Signed in as")]'
    window_manager: '#enable-window-manager'
    workflow: '#workflow .nav-link'

preferences:
  selectors:
    activity: "#activity-settings"
    activity_expand: ".activity-panel-footer"
    sign_out: "#edit-preferences-sign-out"
    change_password: "#edit-preferences-password"
    manage_information: '#edit-preferences-information'
    toolbox_filters: '#edit-preferences-toolbox-filters'
    manage_api_key: '#edit-preferences-api-key'
    custom_builds: '#edit-preferences-custom-builds'
    current_email: "#user-preferences-current-email"
    get_new_key: '.create-button'
    api_key_input: '[data-test-id="api-key-input"]'
    object_store: '#select-preferred-object-store'
    delete_account: '#delete-account'
    delete_account_input: '#name-input'
    delete_account_ok_btn: '.modal-footer .btn-primary'
    email_input: "input[id='email']"
    username_input: "input[id='username']"
    preferred_storage: '.preferred-storage'
    manage_object_stores: '#manage-object-stores'
    manage_file_sources: '#manage-file-sources'

  object_store_selection:
    selectors:
      option_buttons: '.preferred-object-store-select-button'
      option_button: '.preferred-object-store-select-button[data-object-store-id="${object_store_id}"]'

object_store_instances:
  index:
    selectors:
      create_button: '#object-store-create'
      _: '#user-object-stores-index'

  create: 
    selectors:
      select: '.object-store-template-select-button[data-template-id="${template_id}"]'
      _: '#create-object-store-landing'      
      submit: '#submit'

file_source_instances:
  index:
    selectors:
      create_button: '#file-source-create'
      _: '#user-file-sources-index'

  create: 
    selectors:
      select: '.file-source-template-select-button[data-template-id="${template_id}"]'
      _: '#create-file-source-landing'      
      submit: '#submit'

toolbox_filters:
  selectors:
    input:
      type: xpath
      selector: "//span[contains(., '${description}')]/../div/div/label[@class='custom-control-label']"
    submit: '#submit'

change_user_email:
  selectors:
    submit: '#submit'

change_user_password:
  selectors:
    submit: '#submit'

change_user_address:
  selectors:
    address_button:
      type: xpath
      selector: '//span[contains(text(), "Insert Address")]'

sign_out:
  selectors:
    cancel_button: '.modal-footer .btn-secondary'
    sign_out_button: '.modal-footer .btn-primary'

dataset_details:
  selectors:
    _: 'table#dataset-details'
    tool_parameters: 'table#tool-parameters'
    transform_action: '[data-transform-action="${action}"]'
    deferred_source_uri: '.deferred-dataset-source-uri'

object_store_details:
  selectors:
    stored_by_name: '.display-os-by-name'
    badge_of_type: '.object-store-badge-wrapper [data-badge-type="${type}"]'
    usage_details: '.quota-usage-bar'
    usage_bytes: '.quota-usage'
    usage_percent: '.quota-percent-text'
    usage_progress: '.quota-usage-bar .progress'

history_panel:
  menu:
    labels:
      new: 'Create New'

  item:
    selectors:
      # These now appear other places :_( - e.g. in the invocation view so we'll try
      # prefixing ids with #current-history-panel but obviously we need to switch to classes or data
      _:
      - '#current-history-panel [data-hid="${hid}"][data-state="${state}"]'
      - '#current-history-panel #${history_content_type}-${id}'
      - '#current-history-panel [data-hid="${hid}"]'

      title: '${_} .content-title'
      hid: '${_} .hid'
      name: '${_} .name'
      datatype: '${_} .datatype .value'
      details: '${_} .details'
      title_button_area: '${_} .primary-actions'
      primary_action_buttons: '${_} .actions .left'
      secondary_action_buttons: '${_} .actions .right'
      summary: '${_} .summary'
      blurb: '${_} .blurb .value'
      dbkey: '${_} .dbkey .value'
      info: '${_} .info .value'
      peek: '${_} .dataset-peek'
      toolhelp_title: '${_} .toolhelp strong'
      state_icon: '${_} .state-icon'

      # Title buttons...
      display_button: '${_} .display-btn'
      edit_button: '${_} .edit-btn'
      delete_button: '${_} .delete-btn'

      # Action buttons...
      download_button: '${_} .download-btn'
      info_button: '${_} .params-btn'
      rerun_button: '${_} .rerun-btn'
      alltags: '${_} .stateless-tags .tag'

  # history content item
  content_item:
    selectors:
      # specific rows selectable with attributes via suffix
      _: '.history-index .content-item${suffix}'
      title: '${_} .content-title'
      details: '${_} .details'
      summary: '${_} .not-loading .summary'

      hid: '${_} .hid'
      name: '${_} .name'
      blurb: '${_} .not-loading .blurb .value'
      dbkey: '${_} .not-loading .dbkey .value'
      datatype: '${_} .not-loading .datatype .value'
      info: '${_} .not-loading .info .value'
      peek: '${_} .not-loading .dataset-peek'
      toolhelp_title: '${_} .toolhelp strong'

      # Title buttons...
      display_button: '${_} .display-btn'
      edit_button: '${_} .edit-btn'
      delete_button: '${_} .delete-btn'
      rerun_button: '${_} .rerun-btn'
      visualize_button: '${_} .visualize-btn'
      collection_job_details_button: '${_} .collection-job-details-btn'

      # Action buttons...
      download_button: '${_} .download-btn'
      info_button: '${_} .params-btn'
      highlight_button: '${_} .highlight-btn'
      alltags: '${_} .stateless-tags .tag'
      metadata_file_download: '${_} [data-description="download ${metadata_name}"]'

      dataset_operations: '${_} .dataset-actions'

  # re-usable history editor, scoped for use in different layout scenarios (multi, etc.)
  editor:
    selectors:
      _: '${scope} [data-description="edit details"]'
      name: '${_} [data-description="name display"]'
      toggle: '${_} [data-description="editor toggle"]'
      form: '${_} [data-description="edit form"]'
      name_input: '${_} [data-description="name input"]'
      annotation_input: '${_} [data-description="annotation input"]'
      tags_input: '${_} .stateless-tags button'
      save_button: '${_} [data-description="editor save button"]'

  # history tags
  tag_editor:
    selectors:
      _: '${scope} .details .stateless-tags'
      toggle: '${_} .toggle-link'
      display: '${_} .tag span'
      input: '${_} input'
      tag_area: '${_} .interactive-tags'
      tag_close_btn: '${_} .tag-delete-button'

  multi_operations:
    selectors:
      show_button: '.show-history-content-selectors-btn'
      action_button: '.history-contents-list-action-menu-btn'
      action_menu: '.list-action-menu .dropdown-menu'

    labels:
      build_pair: "Build Dataset Pair"
      build_list: "Build Dataset List"
      build_list_pairs: "Build List of Dataset Pairs"
      build_from_rules: "Build Collection from Rules"

  collection_view:
    selectors:
      _: '.dataset-collection-panel'
      nav_menu: '[data-description="collection breadcrumbs menu"]'
      back_button: '[data-description="collection breadcrumbs menu"] :last'
      back: '.navigation .back'
      title: '.dataset-collection-panel .controls .title .editable-text'
      title_input: '.dataset-collection-panel .controls .title input'
      subtitle: '.dataset-collection-panel .controls .title .subtitle'
      elements_warning: '.dataset-collection-panel .controls .elements-warning'
      tag_area_button: '.details .stateless-tags .toggle-button'
      tag_area_input: '.details .stateless-tags .headless-multiselect input'
      list_items: '.dataset-collection-panel .listing-layout .content-item'
      back_to_history: svg[data-description="back to history"]

  selectors:
    _: '#current-history-panel'
    search: '#current-history-panel input.search-query'
    refresh_button: '.history-refresh-button'
    name: '.history-title span:last-child'
    name_edit_input:
      selector: 'name input'
      type: data-description
    contents: '.history-index .content-item'
    empty_message: '#empty-history-message'
    size: '.history-size'
    tag_area: '.details .stateless-tags'
    tag_area_button: '.details .stateless-tags .toggle-button'
    tag_area_input: '.details .stateless-tags .headless-multiselect input'
    tag_close_btn: '.tags-display .tag-delete-button'
    tags: '.tag span'

    annotation_icon: '.actions .history-annotate-btn'
    annotation_area: '.details .history-annotation'
    annotation_editable_text:
      selector: 'annotation value'
      type: data-description
    annotation_edit:
      selector: 'annotation input'
      type: data-description

    annotation_done: '.details .history-annotation .annotation button'

    options_button: '[data-description="history options"]'
    options_button_icon: '[data-description="history options"] button'
    options_menu: '.history-options-button-menu'
    options_menu_item:
      type: sizzle
      selector: '.history-options-button-menu > a:contains("${option_label}")'
    options_show_export_history_to_file: 'a[data-description="export to file"]'

    collection_menu_button: '.collection-menu'
    collection_menu_edit_attributes: '.edit-btn'

    new_history_button: '[data-description="create new history"]'
    histories_operation_menu: '[data-description="history options"]'
    multi_view_button: '[data-description="switch to multi history view"]'

    pagination_pages: '.list-pagination .pages'
    pagination_pages_options: '.list-pagination .pages option'
    pagination_pages_selected_option: '.list-pagination .pages option:checked'
    pagination_next: '.list-pagination button.next'
    pagination_previous: '.list-pagination button.prev'

    storage_overview: '.history-storage-overview-button'

  text:
    tooltip_name: 'Rename history...'
    new_name: 'Unnamed history'

history_storage:
  selectors:
    _: '.history-storage-overview'

storage_dashboard:
  selectors:
    free_space_link: '[data-description="free space card"] button'
    explore_usage_link: '[data-description="explore usage card"] button'

edit_dataset_attributes:
  selectors:
    database_build_dropdown: '[data-label="Database/Build"]'

    _: '[aria-labelledby="dataset-attributes-heading"]'
    name_input: '[aria-labelledby="dataset-attributes-heading"] input#name'
    info_input: '[aria-labelledby="dataset-attributes-heading"] textarea#info'
    annotation_input: '[aria-labelledby="dataset-attributes-heading"] textarea#annotation'
    save_button: '#dataset-attributes-default-save'
    alert: '.dataset-attributes-alert'

  dbkey_dropdown_results:
    selectors:
      _:  '#select2-drop  > .select2-results'
      dbkey_dropdown_option:
        type: xpath
        selector: '//li[normalize-space() = "${dbkey_text}"]'

edit_collection_attributes:
  selectors:
    alert_info: 'div.alert-info'
    database_genome_tab: '.collection-edit-change-genome-nav'
    datatypes_tab: '.collection-edit-change-datatype-nav'
    data_value:
      type: xpath
      selector: '//span[contains(text(), "${data_change}")]'
    genome_select_search: '.database-dropdown input.multiselect__input'
    datatype_select_search: '.datatype-dropdown input.multiselect__input'
    save_dbkey_btn: '.save-dbkey-edit'
    save_datatype_btn: '.save-datatype-edit'

tool_panel:
  selectors:
    tool_link: 'a[href$$="tool_runner?tool_id=${tool_id}"]'
    outer_tool_link: '.toolTitle a[href$$="tool_runner?tool_id=${tool_id}"]'
    data_source_tool_link: 'a[href$$="tool_runner/data_source_redirect?tool_id=${tool_id}"]'
    search: '.search-query'
    workflow_names: '#internal-workflows .toolTitle'
    views_button: '.tool-panel-dropdown'
    views_menu_item: '[data-panel-id="${panel_id}"]'
    panel_labels: '.tool-panel-label'

multi_history_panel:
  selectors:
    _: '.multi-history-panel .content-item${suffix}'
    item: '.multi-history-panel #${history_content_type}-${id}'
    histories: '.multi-history-panel .history-layout'
    current_label: '.details .name'
    switch_history: '.switch-to'
    current_history_check: '#history-column-${history_id} .details .name'
    empty_message_check: '#empty-history-message'
    switch_button: '#history-column-${history_id} .switch-to'
  history_dropdown_menu:
    selectors:
      _: '[history-dropdown-menu="${history_id}"]'
      delete:  '[history-dropdown-menu="${history_id}"] > .delete-history'
      purge:  '[history-dropdown-menu="${history_id}"] > .purge-history'
  copy_history_modal:
    selectors:
      _: '.modal-dialog'
      copy_btn:
        type: xpath
        selector: '//button[contains(text(), "Copy")]'

published_histories:
  selectors:
    histories: '#grid-histories-published tbody tr'
    advanced_search_name_input: '#histories-advanced-filter-name'
    advanced_search_tag_area: '#histories-advanced-filter-tag .stateless-tags button'
    advanced_search_tag_input: '#histories-advanced-filter-tag .stateless-tags input'
    advanced_search_toggle: '#histories-published-grid [data-description="toggle advanced search"]'
    search_input: '#histories-published-grid input.search-query[data-description="filter text input"]'
    tab: '#histories-published-tab'

shared_histories:
  selectors:
    _: '#histories-shared-grid'
    histories: '.grid-table tr'
    tab: '#histories-shared-tab'

history_copy_elements:
  selectors:
    # Following two don't really work as CSS would only work as jQuery/sizzle I think
    # since the page is dynamically generated.
    # https://stackoverflow.com/questions/10645552/is-it-possible-to-use-an-input-value-attribute-as-a-css-selector
    dataset_checkbox: "input[id='dataset|${id}']"
    collection_checkbox: 'input[id="dataset_collection|${id}"]'
    new_history_name: '#new_history_name'
    copy_button: "input[type='submit']"
    done_link: '.donemessage a'

collection_builders:
  selectors:
    clear_filters: "a.clear-filters-link"
    forward_datasets: ".forward-column .column-datasets"
    reverse_datasets: ".reverse-column .column-datasets"
    name: "input.collection-name"

histories:
  selectors:
    activity: '#activity-histories'
    advanced_search_toggle: '#histories-grid [data-description="toggle advanced search"]'
    advanced_search_name_input: '#histories-advanced-filter-name'
    advanced_search_tag_area: '#histories-advanced-filter-tag .stateless-tags button'
    advanced_search_tag_input: '#histories-advanced-filter-tag .stateless-tags input'
    histories: '.grid-table tr'
    import_button: '[data-description="grid action import new history"]'
    reset_input: '#histories-grid [data-description="reset query"]'
    search_input: '#histories-grid input.search-query[data-description="filter text input"]'
  sharing:
    selectors:
      unshare_user_button: '.share_with_view .multiselect__tag-icon'
      unshare_with_user_button: '.share_with_view [data-email="${email}"] .multiselect__tag-icon'
      user_email_input: '.user-email-input-form'
      submit_sharing_with: '.submit-sharing-with'
      share_with_multiselect: '.share_with_view > .multiselect'
      share_with_input: '.share_with_view input'
      make_accessible: '.make-accessible label'
      make_publishable: '.make-publishable label'
    labels:
      unshare: 'Unshare'

files_dialog:
  selectors:
    ftp_label: 'a[title="label-gxftp://"]'
    ftp_details: 'span[title="details-gxftp://"]'
    row: 'span[title="label-${uri}"]'
    back_btn: '#back-btn'

history_export:
  selectors:
    export_link: '.export-link'
    running: '.history-export-component .loading-icon'
    generated_export_link: '.generated-export-link'
    copy_export_link: '.copy-export-link'
    show_job_link: '.show-job-link'
    job_table: '.info_data_table'
    job_table_ok: '.job-information-modal .btn-primary'
    tab_export_to_file: '.tab-export-to-file'
    directory_input: '.directory-form-input'
    name_input: '.export-to-remote-file #name'
    export_button: '.export-button'
    success_message: '.history-export-component .alert-success'

history_export_tasks:
  selectors:
    direct_download: '.gen-direct-download-btn'
    file_source_tab: '.tab-export-to-file'
    remote_file_name_input: '#file-source-tab #name'
    toggle_options_link: '#toggle-options-link'
    export_format_selector: '#format-selector'
    select_format:
        type: xpath
        selector: '//select[@id="format-selector"]/option[@value="${format}"]'

last_export_record:
  selectors:
    details: '.export-record-details'
    preparing_export: '.export-record-details .loading-icon'
    export_format: '.record-archive-format'
    up_to_date_icon: '.record-up-to-date-icon'
    outdated_icon: '.record-outdated-icon'
    expiration_warning_icon: '.record-expiration-warning-icon'
    download_btn: '.record-download-btn'
    reimport_btn: '.record-reimport-btn'

history_import:
  selectors:
    radio_button_remote_files: '.history-import-component .fa-folder-open'
    open_files_dialog: '.history-import-component .directory-form-input'
    import_button: '.import-button'
    running: '.history-import-component .loading-icon'
    success_message: '.history-import-component .alert-success'

pages:
  selectors:
    activity: "#activity-pages"
    create: '#page-create'
    submit: '#submit'
    create_title_input: '#form-element-title input'
    create_slug_input: '#form-element-slug input'
    export: '.markdown-pdf-export'

  editor:
    selectors:
      save: '#save-button'
      embed_dataset: '.toolTitle .title-link[data-tool-id="history_dataset_embedded"]'
      embed_workflow_display: '.toolTitle .title-link[data-tool-id="workflow_display"]'
      history_link: '.toolTitle .title-link[data-tool-id="history_link"]'
      dataset_selector:
        type: xpath
        selector: '//span[text() = "1: 1.fasta"]'
      workflow_selection: .selection-dialog-modal [role="row"][data-pk="${id}"]
      history_selection: .selection-dialog-modal [role="row"][data-pk="${id}"]
      embed_dialog_add_button: '.pages-embed .buttons #button-0'
      markdown_editor: '.markdown-textarea'

  view:
    selectors:
      history_link: '[data-description="history import link"][data-history-id="${history_id}"]'

login:
  selectors:
    form: 'form#login'
    submit:
      type: xpath
      selector: "//button[@name='login']"

registration:
  selectors:
    toggle: '#register-toggle'
    form: 'form#registration'
    submit:
      type: xpath
      selector: "//button[@name='create']"

tool_form:
  selectors:
    options: '.tool-dropdown'
    execute: 'button#execute'
    parameter_div: 'div.ui-form-element[id="form-element-${parameter}"]'
    parameter_error: 'div.ui-form-element[id="form-element-${parameter}"] .ui-form-error-text'
    parameter_checkbox: 'div.ui-form-element[id="form-element-${parameter}"] .ui-switch'
    parameter_input: 'div.ui-form-element[id="form-element-${parameter}"] .ui-input'
    parameter_textarea: 'div.ui-form-element[id="form-element-${parameter}"] textarea'
    parameter_data_input_single: 'div.ui-form-element[id="form-element-${parameter}"] button[title="Single dataset"]'
    parameter_data_input_collection: 'div.ui-form-element[id="form-element-${parameter}"] button[title="Dataset collection"]'
    parameter_data_label: 'div.ui-form-element[id="form-element-${parameter}"] [data-description="form data label"]'
    parameter_data_select: 'div.ui-form-element[id="form-element-${parameter}"] .multiselect'

    repeat_insert: '[data-description="repeat insert"]'
    repeat_move_up: '#${parameter}_up'
    repeat_move_down: '#${parameter}_down'
    reference: '.formatted-reference'
    about: '.tool-footer'
    storage_options: '.tool-storage'
    drilldown_select_all: 'div.ui-form-element[id="form-element-${parameter}"] div.select-all-checkbox'
    drilldown_option: '.drilldown-option'
    drilldown_expand: '.fa-caret-down'

  labels:
    generate_tour: 'Generate Tour'

workflows:
  selectors:
    activity: '#activity-workflows'
    shared_with_me_tab: '#shared-with-me'
    published_tab: '#published a'
    new_button: '#workflow-create'
    import_button: '#workflow-import'
    save_button: '#workflow-save-button'
    search_box: '.workflows-list input.search-query[data-description="filter text input"]'
    clear_filter: '.workflows-list [data-description="reset query"]'
    advanced_search_toggle: '.workflows-list [data-description="toggle advanced search"]'
    advanced_search_name_input: '#workflows-advanced-filter-name'
    advanced_search_tag_input: '#workflows-advanced-filter-tag .stateless-tags'
    workflow_rows: "#workflow-table > tbody > tr:not(.b-table-empty-row, [style*='display: none'])"
    workflows_list: '#workflows-list'
    workflows_list_empty: '#workflow-list-empty'
    workflow_not_found_message: '#no-workflow-found'
    workflow_card: '.workflow-card'
    workflow_cards: '#workflow-cards'
    external_link: '.workflow-external-link'
    trs_icon: '.workflow-trs-icon'
    dropdown: '[data-workflow-actions-dropdown="${id}"]'
    share_button: '#workflow-share-button'
    download_button: '#workflow-download-button'
    run_button: '[data-workflow-run]'
    edit_button: '.workflow-edit-button'
    rename_input: '#workflow-name-input'
    workflow_drop_down: '[data-workflow-actions-dropdown]'
    delete_button: '.workflow-delete-button'
    view_button: '.workflow-name-preview'
    workflow_preview_container: '.workflow-card-preview-modal .workflow-published .published-workflow'
    workflow_preview_information: '.workflow-information'
    view_external_link: ".workflow-view-external-link-button"
    bookmark_link: '.workflow-bookmark-button-${action}'
    import_file: '.workflow-import-file'
    import_trs_search: '.workflow-import-trs-search'
    import_trs_id: '.workflow-import-trs-id'
    import_file_link: '.workflow-import-file-link'
    import_trs_search_link: '.workflow-import-trs-search-link'
    import_trs_id_link: '.workflow-import-trs-id-link'

    workflow_with_name:
      type: xpath
      selector: '//span[@class="workflow-dropdown-name" and text() = "${workflow_name}"]'
  create:
    selectors:
      name: '#workflow_name'
      annotation: '#workflow_annotation'
      submit: '#submit'

visualization:
  selectors:
    _: '#center div.plugin-list'
    activity: '#activity-visualizations'
    plugin_item: '[data-plugin-name*="${id}"]'

trs_search:
  selectors:
    search: "#trs-search-query"
    search_result:
      type: xpath
      selector: "//td[contains(text(), '${workflow_name}')]"
    import_button: ".workflow-import"
    select_server_button: "#dropdownTrsServer"
    import_version: '[data-version-name*="${version}"]'
    select_server:
      type: xpath
      selector: "//a[contains(@class, 'dropdown-item') and normalize-space(text()) = '${server}']"

trs_import:
  selectors:
    input: "#trs-id-input"
    # *= means attribute value contains "${version}"
    # needed because dockstore uses branch or git tag, while workflowhub
    # concatenates name and version
    import_version: '[data-version-name*="${version}"]'
    select_server_button: "#dropdownTrsServer"
    select_server:
      type: xpath
      selector: "//a[contains(@class, 'dropdown-item') and normalize-space(text()) = '${server}']"
    url_input: "#trs-import-url-input"
    url_import_button: "#trs-url-import-button"

workflow_run:
  selectors:
    warning: '[data-description="workflow run warning"]'
    input_div: "[step-label='${label}']"
    input_data_div: "[step-label='${label}'] .multiselect"
    # TODO: put step labels in the DOM ideally
    subworkflow_step_icon: ".portlet-title-icon.fa-sitemap"
    run_workflow: "#run-workflow"
    run_workflow_disabled: "#run-workflow.disabled"
    validation_error: ".validation-error"
    expand_form_link: '.workflow-expand-form-link'
    expanded_form: '.workflow-expanded-form'
    new_history_target_link: '.workflow-new-history-target-link'
    runtime_setting_button: '.workflow-run-settings'
    runtime_setting_target: '.workflow-run-settings-target'
    simplified_input:
      type: xpath
      selector: //div[@data-label="${label}"]//input
    input_select_field:
      type: xpath
      selector: '//div[@data-label="${label}"]//div[contains(@class, "multiselect")]'
    primary_storage_indciator: '.workflow-storage-indicator-primary'
    intermediate_storage_indciator: '.workflow-storage-indicator-intermediate'

workflow_editor:
  node:
    selectors:
      _: "[node-label='${label}']"
      title: '${_} .node-title'
      destroy: '${_} .node-destroy'
      clone: '${_} .node-clone'
      output_data_row:
        type: xpath
        selector: '//div[@data-output-name="${output_name}"]//span[contains(text(), "(${extension})")]'
      output_terminal: "${_} [output-name='${name}']"
      input_terminal: "${_} [input-name='${name}']"
      input_mapping_icon: "${_} [input-name='${name}'].mapped-over"
      connector_destroy_callout: "${_} [input-name='${name}'] + .delete-terminal-button"
      workflow_output_toggle: "${_} [data-output-name='${name}'] .callout-terminal "
      workflow_output_toggle_active: "${_} [data-output-name='${name}'] .mark-terminal-active"
  tool_bar:
    selectors:
      _: ".workflow-editor-toolbar"
      tool: "[data-tool='${tool}']"
      tool_active: ".active[data-tool='${tool}']"
      snapping_distance: "[data-option='snapping-distance']"
      toggle_bold: "[data-option='toggle-bold']"
      toggle_italic: "[data-option='toggle-italic']"
      color: ".color-selector [data-color='${color}']"
      font_size: "[data-option='font-size']"
      line_thickness: "[data-option='line-thickness']"
      smoothing: "[data-option='smoothing']"
      remove_freehand: "[data-option='remove-freehand']"
      select_mode_add: "[data-option='select-mode-add']"
      select_mode_remove: "[data-option='select-mode-remove']"
      selection_count: ".selection-options > span"
      clear_selection: "[title='clear selection']"
      duplicate_selection: "[title='duplicate selected']"
      delete_selection: "[title='delete selected']"
  comment:
    selectors:
      _: ".workflow-editor-comment"
      text_comment: ".text-workflow-comment"
      text_inner: ".text-workflow-comment span"
      markdown_comment: ".markdown-workflow-comment"
      markdown_rendered: ".markdown-workflow-comment .rendered-markdown"
      frame_comment: ".frame-workflow-comment"
      frame_title: ".frame-workflow-comment .frame-comment-header"
      freehand_comment: ".freehand-workflow-comment"
      freehand_path: ".freehand-workflow-comment path"
      delete: "button[title='Delete comment']"
  selectors:
    canvas_body: '#workflow-canvas'
    edit_annotation: '#workflow-annotation'
    edit_name: '#workflow-name'
    license_selector:
      selector: 'license selector'
      type: data-description
    edit_license_link:
      selector: 'edit license link'
      type: data-description
    license_select:
      selector: 'license select'
      type: data-description
    license_save:
      selector: 'license save'
      type: data-description
    tool_menu: '.toolMenuContainer'
    tool_menu_section_link: '.tool-menu-section-${section_name} a span'
    tool_menu_item_link: 'a.tool-menu-item-${item_name}'
    workflow_link:
      type: xpath
      selector: '//a[contains(., "${workflow_title}")]'
    insert_steps:
      type: xpath
      selector: >
        //a/span[text()='${workflow_title}']/following-sibling::span[@title='Insert individual steps.']
    connect_icon: 'div.ui-form-element[id="form-element-${name}"] .ui-form-connected-icon'
    collapse_icon: 'div.ui-form-element[id="form-element-${name}"] .ui-form-collapsible-icon'
    edit_subworkflow: 'button[title="Edit this Subworkflow. You will need to upgrade this Workflow Step afterwards."]'
    node_title:
      type: xpath
      selector: '//span[@class="node-title" and text()="${title}"]'
    label_input:
      type: xpath
      selector: >
        //div[@id='form-element-__label']//input
    annotation_input:
      type: xpath
      selector: >
        //div[@id='form-element-__annotation']//textarea
    step_when:
      type: xpath
      selector: >
       //div[@id='form-element-__conditional']//input
    param_type_form: '#parameter_definition\|parameter_type'
    configure_output:
      type: xpath
      selector: >
        //b[text()="Configure Output: '${output}'"]
    label_output:
      type: xpath
      selector: >
        //div[@id='form-element-__label__${output}']//input
    duplicate_label_error:
      type: xpath
      selector: >
        //div[@id='form-element-__label__${output}']//span[contains(text(), 'Duplicate output label')]
    rename_output:
      type: xpath
      selector: >
        //div[@data-label='Rename dataset']//input
    change_datatype:
      type: xpath
      selector: >
        //div[@data-label='Change datatype']//div[contains(@class, 'multiselect')]
    select_datatype_text_search:
      type: xpath
      selector: >
        //input[@class="multiselect__input"]
    select_datatype:
      type: xpath
      selector: >
        //li[@class="multiselect__element"]//span[text()="${datatype}"]
    add_tags_button:
      type: xpath
      selector: >
        //div[@data-label='Add Tags']//button
    add_tags_input:
      type: xpath
      selector: >
        //div[@data-label='Add Tags']//input
    remove_tags_button:
      type: xpath
      selector: >
        //div[@data-label='Remove Tags']//button
    remove_tags_input:
      type: xpath
      selector: >
        //div[@data-label='Remove Tags']//input
    tool_version_button: ".tool-versions"
    connector_for: "#connection-${sink_id}-${source_id}"
    connector_invalid_for: "#connection-${sink_id}-${source_id} .connection.invalid"
    save_button: '.editor-button-save'
    save_workflow_confirmation_button: '#save-workflow-confirmation .btn-primary'
    state_modal_body: '.state-upgrade-modal'
    modal_button_continue: '.modal-footer .btn'

workflow_show:
  selectors:
    _: '.published-workflow'
    title: '[data-description="workflow name"]'
    import_link: '[data-description="workflow import"]'

invocations:
  selectors:
    activity: "#activity-invocation"
    activity_expand: ".activity-panel-footer"
    invocations_table: '#invocations-grid .grid-table'
    invocations_table_rows: '#invocations-grid .grid-table [data-description="grid item"]'
    pager: '[data-description="grid pager"]'
    pager_page: '[data-description="grid pager"] .gx-grid-pager-page [aria-posinset=${page}]'
    pager_page_next: '[data-description="grid pager"] .gx-grid-pager-next button'
    pager_page_last: '[data-description="grid pager"] .gx-grid-pager-last button'
    pager_page_first: '[data-description="grid pager"] .gx-grid-pager-first button'
    pager_page_previous: '[data-description="grid pager"] .gx-grid-pager-prev button'
    pager_page_active: '[data-description="grid pager"] .gx-grid-pager-page.active button'
    state_details: '.workflow-invocation-state-component'
    toggle_invocation_details: '[data-description="toggle row details"]'
    progress_steps_note: '.workflow-invocation-state-component .steps-progress .progressNote'
    progress_jobs_note: '.workflow-invocation-state-component .jobs-progress .progressNote'
    hide_invocation_graph: '.workflow-invocation-state-component [data-description="hide invocation graph"]'
    invocation_tab:
      type: xpath
      selector: '//a[text()="${label}"]'
    invocation_details_tab:
      type: xpath
      selector: '//a[text()="${label}"]'
    input_details_title: '[data-label="${label}"]'
    input_details_name: '[data-label="${label}"] .name'
    step_title: '[data-step="${order_index}"] .step-title'
    step_details: '[data-step="${order_index}"] .portlet-operations'
    step_output_collection: '[data-step="${order_index}"] .invocation-step-output-collection-details'
    step_output_collection_toggle: '[data-step="${order_index}"] .invocation-step-output-collection-details .name'
    step_output_collection_element_identifier:
      type: xpath
      selector: '//span[contains(@class, "content-title name")][text()="${element_identifier}"]'
    step_output_collection_element_datatype: '[data-step="${order_index}"] .invocation-step-output-collection-details .not-loading .datatype .value'
    step_job_details: '[data-step="${order_index}"] .invocation-step-job-details'
    step_job_table: '[data-step="${order_index}"] .invocation-step-job-details table'
    step_job_table_rows: '[data-step="${order_index}"] .invocation-step-job-details table tbody tr'
    step_job_information: '[data-step="${order_index}"] .invocation-step-job-details table tbody .b-table-details .info_data_table'
    step_job_information_tool_id: '[data-step="${order_index}"] .invocation-step-job-details table tbody .b-table-details .info_data_table #galaxy-tool-id'

tour:
  popover:
    selectors:
      _: '.tour-element'
      title: '${_} .tour-title'
      content: '${_} .tour-content'
      next: '${_} .tour-next'
      end: '${_} .tour-end'

tools:
  selectors:
    activity: '#activity-tools'
    body: '#center #tool-card-body'
    execute: '#execute'
    help: 'div.form-help'
    search: '.search-query'
    title: '.toolSectionTitle'

admin:
  allowlist:
    selectors:
      toolshed:
        type: xpath
        selector: '//a[contains(text(), "Toolshed Tools")]'
      local:
        type: xpath
        selector: '//a[contains(text(), "Local Tools")]'
      sanitized:
        type: xpath
        selector: '//a[contains(text(), "HTML Sanitized")]'
      rendered_active:
        type: xpath
        selector: '//div[contains(@class, "active")]//a[contains(text(), "HTML Rendered")]'

  manage_dependencies:
    selectors:
      dependencies: 'a[contains(text(), "Dependencies")]'
      containers: 'a[contains(text(), "Containers")]'
      unused: 'a[contains(text(), "Unused")]'
      resolver_type: '#manage-resolver-type'
      container_type: '#manage-container-type'
      unused_paths: '#unused-paths-table'

  manage_jobs:
    selectors:
      job_lock: '#prevent-job-dispatching'
      job_lock_label:
        type: xpath
        selector: "//label[@for='prevent-job-dispatching']/strong"
      cutoff: '#cutoff'
      table: '.jobs-table'
      filter_link_user: '.job-filter-link-user'
      filter_link_tool: '.job-filter-link-tool-id'
      filter_link_handler: '.job-filter-link-handler'
      filter_link_runner: '.job-filter-link-runner'
      filter_link_by_user: '.job-filter-link-user[data-user="${user}"]'
      filter_link_by_tool: '.job-filter-link-tool-id[data-tool-id="${tool_id}"]'
      filter_link_by_handler: '.job-filter-link-handler[data-handler="${handler}"]'
      filter_link_by_runner: '.job-filter-link-runner[data-runner="${runner}"]'
      filter_query: '.index-filter-query'

  toolshed:
    selectors:
      repo_search: '#toolshed-repo-search'
      search_results: '#shed-search-results'
      upgrade_notification: '#repository-table .badge'

  quota:
    selectors:
      add_new: '[data-description="grid action create new quota"]'
      items: '#quotas-grid table tr'
      add_form: "[url='/admin/create_quota']"
      add_form_submit: "[url='/admin/create_quota'] #submit"

  index:
    selectors:
      datatypes: '#admin-link-datatypes'
      dependencies: '#admin-link-manage-dependencies'
      data_tables: '#admin-link-data-tables'
      display_applications: '#admin-link-display-applications'
      errors: '#admin-link-error-stack'
      forms: '#admin-link-forms'
      jobs: '#admin-link-jobs'
      local_data: '#admin-link-local-data'
      metadata: '#admin-link-metadata'
      tool_versions: '#admin-link-tool-versions'
      toolshed: '#admin-link-toolshed'
      users: '#admin-link-users'
      quotas: '#admin-link-quotas'
      groups: '#admin-link-groups'
      roles: '#admin-link-roles'
      impersonate: '#admin-link-impersonate'
      allowlist: '#admin-link-allowlist'

  selectors:
    activity: '#activity-admin'
    warning: '#center .alert-warning'
    # TODO: place betters IDS or something on this in these grids in the DOM
    jobs_title: '#jobs-title'
    datatypes_grid: '#data-types-grid'
    data_tables_grid: '#data-tables-grid'
    display_applications_grid: '#display-applications-grid'
    update_jobs: 'form[name="jobs"]'
    dm_title: '#data-managers-title'
    dm_data_managers_card: '#data-managers-card'
    dm_jobs_button: '#${data_manager}-jobs'
    dm_jobs_breadcrumb: '#breadcrumb'
    dm_jobs_table: '#jobs-table'
    dm_job: '#job-${job_id}'
    dm_job_breadcrumb: '#breadcrumb'
    dm_job_data_manager_card: '#data-manager-card'
    dm_job_data_card: '#data-card-${hda_index}'
    dm_table_button: '#${data_table}-table'
    dm_table_card: '#data-table-card'
    users_grid: '#users-grid'
    users_grid_create_button: '[data-description="grid action create new user"]'
    groups_grid_create_button: '[data-description="grid action create new group"]'
    registration_form: 'form#registration'
    groups_grid: '#groups-grid'
    roles_grid: '#roles-grid'
    groups_create_view: '#submit'

libraries:

  selectors:
    _: '#libraries_list'
    activity: '#activity-libraries'
    create_new_library_btn: '#create-new-lib'
    permission_library_btn: '.permission_library_btn'
    toolbtn_save_permissions: '.toolbtn_save_permissions'
    save_new_library_btn: '#save_new_library'
    search_field: '#filterInput'
    new_library_name_input: 'input[placeholder="Name"]'
    new_library_description_input: 'input[placeholder="Description"]'
    add_items_permission: '.add_library_item_role_list'
    add_items_permission_input_field: '.add_library_item_role_list input'
    add_items_permission_field_text: '.add_library_item_role_list .multiselect__tag span'
    add_items_permission_option: '.add_library_item_role_list ul'

  folder:
    selectors:
      add_items_button: '.add-library-items-datasets'
      add_items_menu: '.add-library-items-datasets .dropdown-menu'
      add_items_options: '.add-library-items-datasets .dropdown-menu div a'
      add_folder: '.add-library-items-folder'
      add_to_history: '.add-to-history'
      add_to_history_datasets: '.add-to-history-datasets'
      add_to_history_collection: '.add-to-history-collection'
      # TODO: Most of these aren't very good selectors but the same DOM elements
      # are reused without adding specific classes, IDs, or roles to anything.
      import_modal: '.modal'
      import_datasets_ok_button: '.modal-footer .buttons #button-0'
      import_datasets_cancel_button: '.modal-footer .buttons #button-1'
      export_to_history_options: '#library-collection-type-select'
      export_to_history_paired_option: 'option[value="${collection_option}"]'
      export_to_history_collection_name: '.collection-name'
      export_to_history_new_history: 'input[name=history_name]'
      clear_filters: '.clear-filters-link'
      import_progress_bar: '.progress-bar-import'
      import_history_content: '.library_selected_history_content'
      import_history_contents_items: '.library_selected_history_content tbody > tr'
      import_from_path_textarea: '#import_paths'
      select_all: '#select-all-checkboxes'
      select_one: '.lib-folder-checkbox'
      select_dataset: 'tr[aria-rowindex="${rowindex}"] .lib-folder-checkbox'
      empty_folder_message: '.empty-folder-message'
      btn_open_parent_folder:
        type: xpath
        selector: '//a[contains(text(), "${folder_name}")]'
      edit_folder_btn: '.edit_folder_btn'
      description_field: '.description-field > div'
      description_field_shrinked: '.shrinked-description'
      save_folder_btn: '.save_folder_btn'
      input_folder_name: 'textarea[name="input_folder_name"]'
      input_folder_description: '.input_folder_description'
      download_button: '#download-btn'
      delete_btn: '.toolbtn-bulk-delete'
      toast_msg: '.b-toast'
      toast_warning: '.b-toast-warning'
      select_import_dir_item: 'li[full_path="${name}"] .jstree-anchor'
      import_dir_btn:
        type: xpath
        selector: '//button[contains(text(), "Import")]'
      manage_dataset_permissions_btn: 'a[title="Permissions of ${name}"]'
      make_private_btn: '#make-private'
      access_dataset_roles: '.access_dataset_roles .multiselect__tag span'
      private_dataset_icon: '.fa-key'
      open_location_details_btn: '.details-btn'
      location_details_ok_btn: '#details-modal .btn-primary'
      add_history_items: '#dataset_add_bulk'

    labels:
      from_history: 'from History'
      from_path: 'from Path'
      from_import_dir: 'from Import Directory'
      from_user_import_dir: 'from User Directory'

  dataset:
    selectors:
      table: '.dataset_table'
      table_rows: '.dataset_table tbody tr'

grids:
  selectors:
    body: '.grid-table'
    free_text_search: '[data-description="filter text input"]'

gies:
  jupyter:
    selectors:
      body: 'body.notebook_app'
      trusted_notification: '#notification_trusted'

  selectors:
    spinner: 'img#spinner'
    iframe: 'body iframe[seamless="seamless"]'

upload:
  selectors:
    build_button: '#rule-based #btn-build'
    close_button: '#regular #btn-close'
    composite_close_button: '#composite #btn-close'
    create_button: '#btn-new'
    file_dialog: '#btn-remote-files'
    file_dialog_ok: '[data-description="selection dialog ok"]'
    file_source_selector:
      type: xpath
      selector: '//span[contains(@title, "${path}")]'
    paste_option: '#upload-row-${n} .upload-source .dropdown-menu .dropdown-item .fa-edit'
    paste_content: '#upload-row-${n} .upload-text-content'
    row: '#upload-row-${n}'
    rule_dataset_dialog: '[data-description="rules dataset dialog"]'
    rule_dataset_selector:
      selector: '.selection-dialog-modal'
    rule_dataset_selector_row:
      selector: '.selection-dialog-modal [aria-rowindex="${rowindex}"]'
    rule_select_data_type: '.rule-data-type'
    rule_source_content: 'textarea.upload-rule-source-content'
    tab: '#tab-title-link-${tab}'
    title: '#upload-row-${n} .upload-title'
    settings: '.upload-settings-table'
    settings_button: '#upload-row-${n} .upload-settings span'
    setting_deferred: '.upload-deferred'
    setting_space_to_tab: '.upload-space-to-tab'
    source_button: '#upload-row-${n} .upload-source'
    start: '#activity-upload'
    start_button: '#btn-start'
    local_button: '#btn-local'

new_user_welcome:
  selectors:
    _: .new-user-welcome
    topics: .new-user-welcome-topic
    topic_button: '.new-user-welcome-topic[data-new-user-welcome-topic-title="${title}"] button'
    subtopics: .new-user-welcome-subtopic
    subtopic_button: '.new-user-welcome-subtopic[data-new-user-welcome-subtopic-title="${title}"] button'
    slides: .new-user-welcome-slides
    back: .new-user-welcome-return

rule_builder:
  selectors:
    _: '.rule-collection-creator'
    menu_button_filter: '.rule-menu-filter-button'
    menu_button_rules: '.rule-menu-rules-button'
    menu_button_column: '.rule-menu-column-button'
    menu_item_rule_type: '.rule-link-${rule_type}'
    rule_editor: '.rule-edit-${rule_type}'
    rule_editor_ok: '.rule-editor-ok'
    add_mapping_menu: '.rule-add-mapping'
    add_mapping_button: '.rule-add-mapping-${mapping_type}'
    mapping_edit: '.rule-map-${mapping_type} .select2-container'
    mapping_remove_column: '.rule-map-${mapping_type} .rule-column-selector-target-remove'
    mapping_add_column: '.rule-map-${mapping_type} .rule-column-selector-target-add'
    mapping_ok: '.rule-mapping-ok'
    main_button_ok: '.rule-btn-okay'
    collection_name_input: 'input.collection-name'
    view_source: '.rule-builder-view-source'
    source: '.rule-source'
    table: '#hot-table .htCore'
    extension_select: '.rule-footer-extension-group .extension-select'

charts:
  selectors:
    visualize_button: '.ui-portlet .button i.fa-line-chart'  # without icon - it waits on other buttons that aren't visible, need more specific class
    viewport_canvas: 'svg.charts-viewport-canvas'

job_details:
  selectors:
    galaxy_tool_with_id:
      type: xpath
      selector: '//td[@id="galaxy-tool-id"][normalize-space(text()) = "${tool_id}"]'
    tool_exit_code: '#exit-code'
